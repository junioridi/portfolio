{"ast":null,"code":"// Generated by CoffeeScript 1.4.0\nvar route;\nroute = typeof exports !== \"undefined\" && exports !== null ? exports : this['route'] = {};\n\nroute.Router = function () {\n  function Router() {\n    this.routes = [];\n  }\n\n  Router.prototype.add = function (expr, fn) {\n    var params, pattern, routes;\n\n    if (typeof expr === 'object') {\n      routes = expr;\n    } else {\n      routes = {};\n      routes[expr] = fn;\n    }\n\n    for (expr in routes) {\n      fn = routes[expr];\n      pattern = \"^\" + expr + \"$\";\n      pattern = pattern.replace(/([?=,\\/])/g, '\\\\$1');\n      pattern = pattern.replace(/\\[(.*?)\\]/g, '[[$1]]');\n      params = ['path'];\n      pattern = pattern.replace(/(:|\\*)([\\w\\d]+)/g, function (all, op, name) {\n        params.push(name);\n\n        switch (op) {\n          case ':':\n            return '([^/]*)';\n\n          case '*':\n            return '(.*?)';\n        }\n      });\n      pattern = pattern.replace(/\\[\\[(.*?)\\]\\]/g, '(?:$1)?');\n      this.routes.push({\n        expr: expr,\n        params: params,\n        pattern: new RegExp(pattern),\n        fn: fn\n      });\n    }\n  };\n\n  Router.prototype.run = function (path, context, one) {\n    var args, i, m, results, value, _i, _j, _len, _len1, _ref;\n\n    results = [];\n    _ref = this.routes;\n\n    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n      route = _ref[_i];\n\n      if (m = route.pattern.exec(path)) {\n        args = {};\n\n        for (i = _j = 0, _len1 = m.length; _j < _len1; i = ++_j) {\n          value = m[i];\n          args[route.params[i]] = decodeURIComponent(value);\n        }\n\n        results.push(route.fn.call(context, args));\n\n        if (one) {\n          return results[0];\n        }\n      }\n    }\n\n    return results;\n  };\n\n  return Router;\n}();","map":{"version":3,"sources":["/home/junior/work/backbone/store-track/node_modules/route/lib/index.js"],"names":["route","exports","Router","routes","prototype","add","expr","fn","params","pattern","replace","all","op","name","push","RegExp","run","path","context","one","args","i","m","results","value","_i","_j","_len","_len1","_ref","length","exec","decodeURIComponent","call"],"mappings":"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","sourcesContent":["// Generated by CoffeeScript 1.4.0\nvar route;\n\nroute = typeof exports !== \"undefined\" && exports !== null ? exports : (this['route'] = {});\n\nroute.Router = (function() {\n\n  function Router() {\n    this.routes = [];\n  }\n\n  Router.prototype.add = function(expr, fn) {\n    var params, pattern, routes;\n    if (typeof expr === 'object') {\n      routes = expr;\n    } else {\n      routes = {};\n      routes[expr] = fn;\n    }\n    for (expr in routes) {\n      fn = routes[expr];\n      pattern = \"^\" + expr + \"$\";\n      pattern = pattern.replace(/([?=,\\/])/g, '\\\\$1');\n      pattern = pattern.replace(/\\[(.*?)\\]/g, '[[$1]]');\n      params = ['path'];\n      pattern = pattern.replace(/(:|\\*)([\\w\\d]+)/g, function(all, op, name) {\n        params.push(name);\n        switch (op) {\n          case ':':\n            return '([^/]*)';\n          case '*':\n            return '(.*?)';\n        }\n      });\n      pattern = pattern.replace(/\\[\\[(.*?)\\]\\]/g, '(?:$1)?');\n      this.routes.push({\n        expr: expr,\n        params: params,\n        pattern: new RegExp(pattern),\n        fn: fn\n      });\n    }\n  };\n\n  Router.prototype.run = function(path, context, one) {\n    var args, i, m, results, value, _i, _j, _len, _len1, _ref;\n    results = [];\n    _ref = this.routes;\n    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n      route = _ref[_i];\n      if ((m = route.pattern.exec(path))) {\n        args = {};\n        for (i = _j = 0, _len1 = m.length; _j < _len1; i = ++_j) {\n          value = m[i];\n          args[route.params[i]] = decodeURIComponent(value);\n        }\n        results.push(route.fn.call(context, args));\n        if (one) {\n          return results[0];\n        }\n      }\n    }\n    return results;\n  };\n\n  return Router;\n\n})();\n"]},"metadata":{},"sourceType":"script"}