{"ast":null,"code":"/**\n * History.js Core\n * @author Benjamin Arthur Lupton <contact@balupton.com>\n * @copyright 2010-2011 Benjamin Arthur Lupton <contact@balupton.com>\n * @license New BSD License <http://creativecommons.org/licenses/BSD/>\n */\n// ========================================================================\n// Initialise\n// Localise Globals\nvar navigator = window.navigator,\n    // Make sure we are using the correct navigator\nsessionStorage = window.sessionStorage || false,\n    // sessionStorage\nsetTimeout = window.setTimeout,\n    clearTimeout = window.clearTimeout,\n    setInterval = window.setInterval,\n    clearInterval = window.clearInterval,\n    JSON = window.JSON,\n    alert = window.alert,\n    History = module.exports = {},\n    history = window.history; // Old History Object\n\ntry {\n  sessionStorage.setItem('TEST', '1');\n  sessionStorage.removeItem('TEST');\n} catch (e) {\n  sessionStorage = false;\n} // MooTools Compatibility\n\n\nJSON.stringify = JSON.stringify || JSON.encode;\nJSON.parse = JSON.parse || JSON.decode; // Check Existence\n\nif (typeof History.init !== 'undefined') {\n  throw new Error('History.js Core has already been loaded...');\n}\n\nHistory.Adapter = require('./adapter.js'); // Initialise History\n\nHistory.init = function (options) {\n  // Check Load Status of Adapter\n  if (typeof History.Adapter === 'undefined') {\n    return false;\n  }\n\n  if (process.title === 'node') {\n    return;\n  } // Check Load Status of Core\n\n\n  if (typeof History.initCore !== 'undefined') {\n    History.initCore();\n  } // Check Load Status of HTML4 Support\n  // if ( typeof History.initHtml4 !== 'undefined' ) {\n  //     History.initHtml4();\n  // }\n  // Return true\n\n\n  return true;\n}; // ========================================================================\n// Initialise Core\n// Initialise Core\n\n\nHistory.initCore = function (options) {\n  // Initialise\n  if (typeof History.initCore.initialized !== 'undefined') {\n    // Already Loaded\n    return false;\n  } else {\n    History.initCore.initialized = true;\n  } // ====================================================================\n  // Options\n\n  /**\n   * History.options\n   * Configurable options\n   */\n\n\n  History.options = History.options || {};\n  /**\n   * History.options.hashChangeInterval\n   * How long should the interval be before hashchange checks\n   */\n\n  History.options.hashChangeInterval = History.options.hashChangeInterval || 100;\n  /**\n   * History.options.safariPollInterval\n   * How long should the interval be before safari poll checks\n   */\n\n  History.options.safariPollInterval = History.options.safariPollInterval || 500;\n  /**\n   * History.options.doubleCheckInterval\n   * How long should the interval be before we perform a double check\n   */\n\n  History.options.doubleCheckInterval = History.options.doubleCheckInterval || 500;\n  /**\n   * History.options.disableSuid\n   * Force History not to append suid\n   */\n\n  History.options.disableSuid = History.options.disableSuid || false;\n  /**\n   * History.options.storeInterval\n   * How long should we wait between store calls\n   */\n\n  History.options.storeInterval = History.options.storeInterval || 1000;\n  /**\n   * History.options.busyDelay\n   * How long should we wait between busy events\n   */\n\n  History.options.busyDelay = History.options.busyDelay || 250;\n  /**\n   * History.options.debug\n   * If true will enable debug messages to be logged\n   */\n\n  History.options.debug = History.options.debug || false;\n  /**\n   * History.options.initialTitle\n   * What is the title of the initial state\n   */\n\n  History.options.initialTitle = History.options.initialTitle || document.title;\n  /**\n   * History.options.html4Mode\n   * If true, will force HTMl4 mode (hashtags)\n   */\n\n  History.options.html4Mode = History.options.html4Mode || false;\n  /**\n   * History.options.delayInit\n   * Want to override default options and call init manually.\n   */\n\n  History.options.delayInit = History.options.delayInit || false; // ====================================================================\n  // Interval record\n\n  /**\n   * History.intervalList\n   * List of intervals set, to be cleared when document is unloaded.\n   */\n\n  History.intervalList = [];\n  /**\n   * History.clearAllIntervals\n   * Clears all setInterval instances.\n   */\n\n  History.clearAllIntervals = function () {\n    var i,\n        il = History.intervalList;\n\n    if (typeof il !== \"undefined\" && il !== null) {\n      for (i = 0; i < il.length; i++) {\n        clearInterval(il[i]);\n      }\n\n      History.intervalList = null;\n    }\n  }; // ====================================================================\n  // Debug\n\n  /**\n   * History.debug(message,...)\n   * Logs the passed arguments if debug enabled\n   */\n\n\n  History.debug = function () {\n    if (History.options.debug || false) {\n      History.log.apply(History, arguments);\n    }\n  };\n  /**\n   * History.log(message,...)\n   * Logs the passed arguments\n   */\n\n\n  History.log = function () {\n    // Prepare\n    var consoleExists = !(typeof console === 'undefined' || typeof console.log === 'undefined' || typeof console.log.apply === 'undefined'),\n        textarea = document.getElementById('log'),\n        message,\n        i,\n        n,\n        args,\n        arg; // Write to Console\n\n    if (consoleExists) {\n      args = Array.prototype.slice.call(arguments);\n      message = args.shift();\n\n      if (typeof console.debug !== 'undefined') {\n        console.debug.apply(console, [message, args]);\n      } else {\n        console.log.apply(console, [message, args]);\n      }\n    } else {\n      message = \"\\n\" + arguments[0] + \"\\n\";\n    } // Write to log\n\n\n    for (i = 1, n = arguments.length; i < n; ++i) {\n      arg = arguments[i];\n\n      if (typeof arg === 'object' && typeof JSON !== 'undefined') {\n        try {\n          arg = JSON.stringify(arg);\n        } catch (Exception) {// Recursive Object\n        }\n      }\n\n      message += \"\\n\" + arg + \"\\n\";\n    } // Textarea\n\n\n    if (textarea) {\n      textarea.value += message + \"\\n-----\\n\";\n      textarea.scrollTop = textarea.scrollHeight - textarea.clientHeight;\n    } // No Textarea, No Console\n    else if (!consoleExists) {\n        alert(message);\n      } // Return true\n\n\n    return true;\n  }; // ====================================================================\n  // Emulated Status\n\n  /**\n   * History.getInternetExplorerMajorVersion()\n   * Get's the major version of Internet Explorer\n   * @return {integer}\n   * @license Public Domain\n   * @author Benjamin Arthur Lupton <contact@balupton.com>\n   * @author James Padolsey <https://gist.github.com/527683>\n   */\n\n\n  History.getInternetExplorerMajorVersion = function () {\n    var result = History.getInternetExplorerMajorVersion.cached = typeof History.getInternetExplorerMajorVersion.cached !== 'undefined' ? History.getInternetExplorerMajorVersion.cached : function () {\n      var v = 3,\n          div = document.createElement('div'),\n          all = div.getElementsByTagName('i');\n\n      while ((div.innerHTML = '<!--[if gt IE ' + ++v + ']><i></i><![endif]-->') && all[0]) {}\n\n      return v > 4 ? v : false;\n    }();\n    return result;\n  };\n  /**\n   * History.isInternetExplorer()\n   * Are we using Internet Explorer?\n   * @return {boolean}\n   * @license Public Domain\n   * @author Benjamin Arthur Lupton <contact@balupton.com>\n   */\n\n\n  History.isInternetExplorer = function () {\n    var result = History.isInternetExplorer.cached = typeof History.isInternetExplorer.cached !== 'undefined' ? History.isInternetExplorer.cached : Boolean(History.getInternetExplorerMajorVersion());\n    return result;\n  };\n  /**\n   * History.emulated\n   * Which features require emulating?\n   */\n\n\n  if (History.options.html4Mode) {\n    History.emulated = {\n      pushState: true,\n      hashChange: true\n    };\n  } else {\n    History.emulated = {\n      pushState: !Boolean(window.history && window.history.pushState && window.history.replaceState && !(/ Mobile\\/([1-7][a-z]|(8([abcde]|f(1[0-8]))))/i.test(navigator.userAgent)\n      /* disable for versions of iOS before version 4.3 (8F190) */\n      || /AppleWebKit\\/5([0-2]|3[0-2])/i.test(navigator.userAgent)\n      /* disable for the mercury iOS browser, or at least older versions of the webkit engine */\n      )),\n      hashChange: Boolean(!('onhashchange' in window || 'onhashchange' in document) || History.isInternetExplorer() && History.getInternetExplorerMajorVersion() < 8)\n    };\n  }\n  /**\n   * History.enabled\n   * Is History enabled?\n   */\n\n\n  History.enabled = !History.emulated.pushState;\n  /**\n   * History.bugs\n   * Which bugs are present\n   */\n\n  History.bugs = {\n    /**\n     * Safari 5 and Safari iOS 4 fail to return to the correct state once a hash is replaced by a `replaceState` call\n     * https://bugs.webkit.org/show_bug.cgi?id=56249\n     */\n    setHash: Boolean(!History.emulated.pushState && navigator.vendor === 'Apple Computer, Inc.' && /AppleWebKit\\/5([0-2]|3[0-3])/.test(navigator.userAgent)),\n\n    /**\n     * Safari 5 and Safari iOS 4 sometimes fail to apply the state change under busy conditions\n     * https://bugs.webkit.org/show_bug.cgi?id=42940\n     */\n    safariPoll: Boolean(!History.emulated.pushState && navigator.vendor === 'Apple Computer, Inc.' && /AppleWebKit\\/5([0-2]|3[0-3])/.test(navigator.userAgent)),\n\n    /**\n     * MSIE 6 and 7 sometimes do not apply a hash even it was told to (requiring a second call to the apply function)\n     */\n    ieDoubleCheck: Boolean(History.isInternetExplorer() && History.getInternetExplorerMajorVersion() < 8),\n\n    /**\n     * MSIE 6 requires the entire hash to be encoded for the hashes to trigger the onHashChange event\n     */\n    hashEscape: Boolean(History.isInternetExplorer() && History.getInternetExplorerMajorVersion() < 7)\n  };\n  /**\n   * History.isEmptyObject(obj)\n   * Checks to see if the Object is Empty\n   * @param {Object} obj\n   * @return {boolean}\n   */\n\n  History.isEmptyObject = function (obj) {\n    for (var name in obj) {\n      if (obj.hasOwnProperty(name)) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n  /**\n   * History.cloneObject(obj)\n   * Clones a object and eliminate all references to the original contexts\n   * @param {Object} obj\n   * @return {Object}\n   */\n\n\n  History.cloneObject = function (obj) {\n    var hash, newObj;\n\n    if (obj) {\n      hash = JSON.stringify(obj);\n      newObj = JSON.parse(hash);\n    } else {\n      newObj = {};\n    }\n\n    return newObj;\n  }; // ====================================================================\n  // URL Helpers\n\n  /**\n   * History.getRootUrl()\n   * Turns \"http://mysite.com/dir/page.html?asd\" into \"http://mysite.com\"\n   * @return {String} rootUrl\n   */\n\n\n  History.getRootUrl = function () {\n    // Create\n    var rootUrl = document.location.protocol + '//' + (document.location.hostname || document.location.host);\n\n    if (document.location.port || false) {\n      rootUrl += ':' + document.location.port;\n    }\n\n    rootUrl += '/'; // Return\n\n    return rootUrl;\n  };\n  /**\n   * History.getBaseHref()\n   * Fetches the `href` attribute of the `<base href=\"...\">` element if it exists\n   * @return {String} baseHref\n   */\n\n\n  History.getBaseHref = function () {\n    // Create\n    var baseElements = document.getElementsByTagName('base'),\n        baseElement = null,\n        baseHref = ''; // Test for Base Element\n\n    if (baseElements.length === 1) {\n      // Prepare for Base Element\n      baseElement = baseElements[0];\n      baseHref = baseElement.href.replace(/[^\\/]+$/, '');\n    } // Adjust trailing slash\n\n\n    baseHref = baseHref.replace(/\\/+$/, '');\n    if (baseHref) baseHref += '/'; // Return\n\n    return baseHref;\n  };\n  /**\n   * History.getBaseUrl()\n   * Fetches the baseHref or basePageUrl or rootUrl (whichever one exists first)\n   * @return {String} baseUrl\n   */\n\n\n  History.getBaseUrl = function () {\n    // Create\n    var baseUrl = History.getBaseHref() || History.getBasePageUrl() || History.getRootUrl(); // Return\n\n    return baseUrl;\n  };\n  /**\n   * History.getPageUrl()\n   * Fetches the URL of the current page\n   * @return {String} pageUrl\n   */\n\n\n  History.getPageUrl = function () {\n    // Fetch\n    var State = History.getState(false, false),\n        stateUrl = (State || {}).url || History.getLocationHref(),\n        pageUrl; // Create\n\n    pageUrl = stateUrl.replace(/\\/+$/, '').replace(/[^\\/]+$/, function (part, index, string) {\n      return /\\./.test(part) ? part : part + '/';\n    }); // Return\n\n    return pageUrl;\n  };\n  /**\n   * History.getBasePageUrl()\n   * Fetches the Url of the directory of the current page\n   * @return {String} basePageUrl\n   */\n\n\n  History.getBasePageUrl = function () {\n    // Create\n    var basePageUrl = History.getLocationHref().replace(/[#\\?].*/, '').replace(/[^\\/]+$/, function (part, index, string) {\n      return /[^\\/]$/.test(part) ? '' : part;\n    }).replace(/\\/+$/, '') + '/'; // Return\n\n    return basePageUrl;\n  };\n  /**\n   * History.getFullUrl(url)\n   * Ensures that we have an absolute URL and not a relative URL\n   * @param {string} url\n   * @param {Boolean} allowBaseHref\n   * @return {string} fullUrl\n   */\n\n\n  History.getFullUrl = function (url, allowBaseHref) {\n    // Prepare\n    var fullUrl = url,\n        firstChar = url.substring(0, 1);\n    allowBaseHref = typeof allowBaseHref === 'undefined' ? true : allowBaseHref; // Check\n\n    if (/[a-z]+\\:\\/\\//.test(url)) {// Full URL\n    } else if (firstChar === '/') {\n      // Root URL\n      fullUrl = History.getRootUrl() + url.replace(/^\\/+/, '');\n    } else if (firstChar === '#') {\n      // Anchor URL\n      fullUrl = History.getPageUrl().replace(/#.*/, '') + url;\n    } else if (firstChar === '?') {\n      // Query URL\n      fullUrl = History.getPageUrl().replace(/[\\?#].*/, '') + url;\n    } else {\n      // Relative URL\n      if (allowBaseHref) {\n        fullUrl = History.getBaseUrl() + url.replace(/^(\\.\\/)+/, '');\n      } else {\n        fullUrl = History.getBasePageUrl() + url.replace(/^(\\.\\/)+/, '');\n      } // We have an if condition above as we do not want hashes\n      // which are relative to the baseHref in our URLs\n      // as if the baseHref changes, then all our bookmarks\n      // would now point to different locations\n      // whereas the basePageUrl will always stay the same\n\n    } // Return\n\n\n    return fullUrl.replace(/\\#$/, '');\n  };\n  /**\n   * History.getShortUrl(url)\n   * Ensures that we have a relative URL and not a absolute URL\n   * @param {string} url\n   * @return {string} url\n   */\n\n\n  History.getShortUrl = function (url) {\n    // Prepare\n    var shortUrl = url,\n        baseUrl = History.getBaseUrl(),\n        rootUrl = History.getRootUrl(); // Trim baseUrl\n\n    if (History.emulated.pushState) {\n      // We are in a if statement as when pushState is not emulated\n      // The actual url these short urls are relative to can change\n      // So within the same session, we the url may end up somewhere different\n      shortUrl = shortUrl.replace(baseUrl, '');\n    } // Trim rootUrl\n\n\n    shortUrl = shortUrl.replace(rootUrl, '/'); // Ensure we can still detect it as a state\n\n    if (History.isTraditionalAnchor(shortUrl)) {\n      shortUrl = './' + shortUrl;\n    } // Clean It\n\n\n    shortUrl = shortUrl.replace(/^(\\.\\/)+/g, './').replace(/\\#$/, ''); // Return\n\n    return shortUrl;\n  };\n  /**\n   * History.getLocationHref(document)\n   * Returns a normalized version of document.location.href\n   * accounting for browser inconsistencies, etc.\n   *\n   * This URL will be URI-encoded and will include the hash\n   *\n   * @param {object} document\n   * @return {string} url\n   */\n\n\n  History.getLocationHref = function (doc) {\n    doc = doc || document; // most of the time, this will be true\n\n    if (doc.URL === doc.location.href) return doc.location.href; // some versions of webkit URI-decode document.location.href\n    // but they leave document.URL in an encoded state\n\n    if (doc.location.href === decodeURIComponent(doc.URL)) return doc.URL; // FF 3.6 only updates document.URL when a page is reloaded\n    // document.location.href is updated correctly\n\n    if (doc.location.hash && decodeURIComponent(doc.location.href.replace(/^[^#]+/, \"\")) === doc.location.hash) return doc.location.href;\n    if (doc.URL.indexOf('#') == -1 && doc.location.href.indexOf('#') != -1) return doc.location.href;\n    return doc.URL || doc.location.href;\n  }; // ====================================================================\n  // State Storage\n\n  /**\n   * History.store\n   * The store for all session specific data\n   */\n\n\n  History.store = {};\n  /**\n   * History.idToState\n   * 1-1: State ID to State Object\n   */\n\n  History.idToState = History.idToState || {};\n  /**\n   * History.stateToId\n   * 1-1: State String to State ID\n   */\n\n  History.stateToId = History.stateToId || {};\n  /**\n   * History.urlToId\n   * 1-1: State URL to State ID\n   */\n\n  History.urlToId = History.urlToId || {};\n  /**\n   * History.storedStates\n   * Store the states in an array\n   */\n\n  History.storedStates = History.storedStates || [];\n  /**\n   * History.savedStates\n   * Saved the states in an array\n   */\n\n  History.savedStates = History.savedStates || [];\n  /**\n   * History.noramlizeStore()\n   * Noramlize the store by adding necessary values\n   */\n\n  History.normalizeStore = function () {\n    History.store.idToState = History.store.idToState || {};\n    History.store.urlToId = History.store.urlToId || {};\n    History.store.stateToId = History.store.stateToId || {};\n  };\n  /**\n   * History.getState()\n   * Get an object containing the data, title and url of the current state\n   * @param {Boolean} friendly\n   * @param {Boolean} create\n   * @return {Object} State\n   */\n\n\n  History.getState = function (friendly, create) {\n    // Prepare\n    if (typeof friendly === 'undefined') {\n      friendly = true;\n    }\n\n    if (typeof create === 'undefined') {\n      create = true;\n    } // Fetch\n\n\n    var State = History.getLastSavedState(); // Create\n\n    if (!State && create) {\n      State = History.createStateObject();\n    } // Adjust\n\n\n    if (friendly) {\n      State = History.cloneObject(State);\n      State.url = State.cleanUrl || State.url;\n    } // Return\n\n\n    return State;\n  };\n  /**\n   * History.getIdByState(State)\n   * Gets a ID for a State\n   * @param {State} newState\n   * @return {String} id\n   */\n\n\n  History.getIdByState = function (newState) {\n    // Fetch ID\n    var id = History.extractId(newState.url),\n        str;\n\n    if (!id) {\n      // Find ID via State String\n      str = History.getStateString(newState);\n\n      if (typeof History.stateToId[str] !== 'undefined') {\n        id = History.stateToId[str];\n      } else if (typeof History.store.stateToId[str] !== 'undefined') {\n        id = History.store.stateToId[str];\n      } else {\n        // Generate a new ID\n        while (true) {\n          id = new Date().getTime() + String(Math.random()).replace(/\\D/g, '');\n\n          if (typeof History.idToState[id] === 'undefined' && typeof History.store.idToState[id] === 'undefined') {\n            break;\n          }\n        } // Apply the new State to the ID\n\n\n        History.stateToId[str] = id;\n        History.idToState[id] = newState;\n      }\n    } // Return ID\n\n\n    return id;\n  };\n  /**\n   * History.normalizeState(State)\n   * Expands a State Object\n   * @param {object} State\n   * @return {object}\n   */\n\n\n  History.normalizeState = function (oldState) {\n    // Variables\n    var newState, dataNotEmpty; // Prepare\n\n    if (!oldState || typeof oldState !== 'object') {\n      oldState = {};\n    } // Check\n\n\n    if (typeof oldState.normalized !== 'undefined') {\n      return oldState;\n    } // Adjust\n\n\n    if (!oldState.data || typeof oldState.data !== 'object') {\n      oldState.data = {};\n    } // ----------------------------------------------------------------\n    // Create\n\n\n    newState = {};\n    newState.normalized = true;\n    newState.title = oldState.title || '';\n    newState.url = History.getFullUrl(oldState.url ? oldState.url : History.getLocationHref());\n    newState.hash = History.getShortUrl(newState.url);\n    newState.data = History.cloneObject(oldState.data); // Fetch ID\n\n    newState.id = History.getIdByState(newState); // ----------------------------------------------------------------\n    // Clean the URL\n\n    newState.cleanUrl = newState.url.replace(/\\??\\&_suid.*/, '');\n    newState.url = newState.cleanUrl; // Check to see if we have more than just a url\n\n    dataNotEmpty = !History.isEmptyObject(newState.data); // Apply\n\n    if ((newState.title || dataNotEmpty) && History.options.disableSuid !== true) {\n      // Add ID to Hash\n      newState.hash = History.getShortUrl(newState.url).replace(/\\??\\&_suid.*/, '');\n\n      if (!/\\?/.test(newState.hash)) {\n        newState.hash += '?';\n      }\n\n      newState.hash += '&_suid=' + newState.id;\n    } // Create the Hashed URL\n\n\n    newState.hashedUrl = History.getFullUrl(newState.hash); // ----------------------------------------------------------------\n    // Update the URL if we have a duplicate\n\n    if ((History.emulated.pushState || History.bugs.safariPoll) && History.hasUrlDuplicate(newState)) {\n      newState.url = newState.hashedUrl;\n    } // ----------------------------------------------------------------\n    // Return\n\n\n    return newState;\n  };\n  /**\n   * History.createStateObject(data,title,url)\n   * Creates a object based on the data, title and url state params\n   * @param {object} data\n   * @param {string} title\n   * @param {string} url\n   * @return {object}\n   */\n\n\n  History.createStateObject = function (data, title, url) {\n    // Hashify\n    var State = {\n      'data': data,\n      'title': title,\n      'url': url\n    }; // Expand the State\n\n    State = History.normalizeState(State); // Return object\n\n    return State;\n  };\n  /**\n   * History.getStateById(id)\n   * Get a state by it's UID\n   * @param {String} id\n   */\n\n\n  History.getStateById = function (id) {\n    // Prepare\n    id = String(id); // Retrieve\n\n    var State = History.idToState[id] || History.store.idToState[id] || undefined; // Return State\n\n    return State;\n  };\n  /**\n   * Get a State's String\n   * @param {State} passedState\n   */\n\n\n  History.getStateString = function (passedState) {\n    // Prepare\n    var State, cleanedState, str; // Fetch\n\n    State = History.normalizeState(passedState); // Clean\n\n    cleanedState = {\n      data: State.data,\n      title: passedState.title,\n      url: passedState.url\n    }; // Fetch\n\n    str = JSON.stringify(cleanedState); // Return\n\n    return str;\n  };\n  /**\n   * Get a State's ID\n   * @param {State} passedState\n   * @return {String} id\n   */\n\n\n  History.getStateId = function (passedState) {\n    // Prepare\n    var State, id; // Fetch\n\n    State = History.normalizeState(passedState); // Fetch\n\n    id = State.id; // Return\n\n    return id;\n  };\n  /**\n   * History.getHashByState(State)\n   * Creates a Hash for the State Object\n   * @param {State} passedState\n   * @return {String} hash\n   */\n\n\n  History.getHashByState = function (passedState) {\n    // Prepare\n    var State, hash; // Fetch\n\n    State = History.normalizeState(passedState); // Hash\n\n    hash = State.hash; // Return\n\n    return hash;\n  };\n  /**\n   * History.extractId(url_or_hash)\n   * Get a State ID by it's URL or Hash\n   * @param {string} url_or_hash\n   * @return {string} id\n   */\n\n\n  History.extractId = function (url_or_hash) {\n    // Prepare\n    var id, parts, url, tmp; // Extract\n    // If the URL has a #, use the id from before the #\n\n    if (url_or_hash.indexOf('#') != -1) {\n      tmp = url_or_hash.split(\"#\")[0];\n    } else {\n      tmp = url_or_hash;\n    }\n\n    parts = /(.*)\\&_suid=([0-9]+)$/.exec(tmp);\n    url = parts ? parts[1] || url_or_hash : url_or_hash;\n    id = parts ? String(parts[2] || '') : ''; // Return\n\n    return id || false;\n  };\n  /**\n   * History.isTraditionalAnchor\n   * Checks to see if the url is a traditional anchor or not\n   * @param {String} url_or_hash\n   * @return {Boolean}\n   */\n\n\n  History.isTraditionalAnchor = function (url_or_hash) {\n    // Check\n    var isTraditional = !/[\\/\\?\\.]/.test(url_or_hash); // Return\n\n    return isTraditional;\n  };\n  /**\n   * History.extractState\n   * Get a State by it's URL or Hash\n   * @param {String} url_or_hash\n   * @return {State|null}\n   */\n\n\n  History.extractState = function (url_or_hash, create) {\n    // Prepare\n    var State = null,\n        id,\n        url;\n    create = create || false; // Fetch SUID\n\n    id = History.extractId(url_or_hash);\n\n    if (id) {\n      State = History.getStateById(id);\n    } // Fetch SUID returned no State\n\n\n    if (!State) {\n      // Fetch URL\n      url = History.getFullUrl(url_or_hash); // Check URL\n\n      id = History.getIdByUrl(url) || false;\n\n      if (id) {\n        State = History.getStateById(id);\n      } // Create State\n\n\n      if (!State && create && !History.isTraditionalAnchor(url_or_hash)) {\n        State = History.createStateObject(null, null, url);\n      }\n    } // Return\n\n\n    return State;\n  };\n  /**\n   * History.getIdByUrl()\n   * Get a State ID by a State URL\n   */\n\n\n  History.getIdByUrl = function (url) {\n    // Fetch\n    var id = History.urlToId[url] || History.store.urlToId[url] || undefined; // Return\n\n    return id;\n  };\n  /**\n   * History.getLastSavedState()\n   * Get an object containing the data, title and url of the current state\n   * @return {Object} State\n   */\n\n\n  History.getLastSavedState = function () {\n    return History.savedStates[History.savedStates.length - 1] || undefined;\n  };\n  /**\n   * History.getLastStoredState()\n   * Get an object containing the data, title and url of the current state\n   * @return {Object} State\n   */\n\n\n  History.getLastStoredState = function () {\n    return History.storedStates[History.storedStates.length - 1] || undefined;\n  };\n  /**\n   * History.hasUrlDuplicate\n   * Checks if a Url will have a url conflict\n   * @param {Object} newState\n   * @return {Boolean} hasDuplicate\n   */\n\n\n  History.hasUrlDuplicate = function (newState) {\n    // Prepare\n    var hasDuplicate = false,\n        oldState; // Fetch\n\n    oldState = History.extractState(newState.url); // Check\n\n    hasDuplicate = oldState && oldState.id !== newState.id; // Return\n\n    return hasDuplicate;\n  };\n  /**\n   * History.storeState\n   * Store a State\n   * @param {Object} newState\n   * @return {Object} newState\n   */\n\n\n  History.storeState = function (newState) {\n    // Store the State\n    History.urlToId[newState.url] = newState.id; // Push the State\n\n    History.storedStates.push(History.cloneObject(newState)); // Return newState\n\n    return newState;\n  };\n  /**\n   * History.isLastSavedState(newState)\n   * Tests to see if the state is the last state\n   * @param {Object} newState\n   * @return {boolean} isLast\n   */\n\n\n  History.isLastSavedState = function (newState) {\n    // Prepare\n    var isLast = false,\n        newId,\n        oldState,\n        oldId; // Check\n\n    if (History.savedStates.length) {\n      newId = newState.id;\n      oldState = History.getLastSavedState();\n      oldId = oldState.id; // Check\n\n      isLast = newId === oldId;\n    } // Return\n\n\n    return isLast;\n  };\n  /**\n   * History.saveState\n   * Push a State\n   * @param {Object} newState\n   * @return {boolean} changed\n   */\n\n\n  History.saveState = function (newState) {\n    // Check Hash\n    if (History.isLastSavedState(newState)) {\n      return false;\n    } // Push the State\n\n\n    History.savedStates.push(History.cloneObject(newState)); // Return true\n\n    return true;\n  };\n  /**\n   * History.getStateByIndex()\n   * Gets a state by the index\n   * @param {integer} index\n   * @return {Object}\n   */\n\n\n  History.getStateByIndex = function (index) {\n    // Prepare\n    var State = null; // Handle\n\n    if (typeof index === 'undefined') {\n      // Get the last inserted\n      State = History.savedStates[History.savedStates.length - 1];\n    } else if (index < 0) {\n      // Get from the end\n      State = History.savedStates[History.savedStates.length + index];\n    } else {\n      // Get from the beginning\n      State = History.savedStates[index];\n    } // Return State\n\n\n    return State;\n  };\n  /**\n   * History.getCurrentIndex()\n   * Gets the current index\n   * @return (integer)\n  */\n\n\n  History.getCurrentIndex = function () {\n    // Prepare\n    var index = null; // No states saved\n\n    if (History.savedStates.length < 1) {\n      index = 0;\n    } else {\n      index = History.savedStates.length - 1;\n    }\n\n    return index;\n  }; // ====================================================================\n  // Hash Helpers\n\n  /**\n   * History.getHash()\n   * @param {Location=} location\n   * Gets the current document hash\n   * Note: unlike location.hash, this is guaranteed to return the escaped hash in all browsers\n   * @return {string}\n   */\n\n\n  History.getHash = function (doc) {\n    var url = History.getLocationHref(doc),\n        hash;\n    hash = History.getHashByUrl(url);\n    return hash;\n  };\n  /**\n   * History.unescapeHash()\n   * normalize and Unescape a Hash\n   * @param {String} hash\n   * @return {string}\n   */\n\n\n  History.unescapeHash = function (hash) {\n    // Prepare\n    var result = History.normalizeHash(hash); // Unescape hash\n\n    result = decodeURIComponent(result); // Return result\n\n    return result;\n  };\n  /**\n   * History.normalizeHash()\n   * normalize a hash across browsers\n   * @return {string}\n   */\n\n\n  History.normalizeHash = function (hash) {\n    // Prepare\n    var result = hash.replace(/[^#]*#/, '').replace(/#.*/, ''); // Return result\n\n    return result;\n  };\n  /**\n   * History.setHash(hash)\n   * Sets the document hash\n   * @param {string} hash\n   * @return {History}\n   */\n\n\n  History.setHash = function (hash, queue) {\n    // Prepare\n    var State, pageUrl; // Handle Queueing\n\n    if (queue !== false && History.busy()) {\n      // Wait + Push to Queue\n      //History.debug('History.setHash: we must wait', arguments);\n      History.pushQueue({\n        scope: History,\n        callback: History.setHash,\n        args: arguments,\n        queue: queue\n      });\n      return false;\n    } // Log\n    //History.debug('History.setHash: called',hash);\n    // Make Busy + Continue\n\n\n    History.busy(true); // Check if hash is a state\n\n    State = History.extractState(hash, true);\n\n    if (State && !History.emulated.pushState) {\n      // Hash is a state so skip the setHash\n      //History.debug('History.setHash: Hash is a state so skipping the hash set with a direct pushState call',arguments);\n      // PushState\n      History.pushState(State.data, State.title, State.url, false);\n    } else if (History.getHash() !== hash) {\n      // Hash is a proper hash, so apply it\n      // Handle browser bugs\n      if (History.bugs.setHash) {\n        // Fix Safari Bug https://bugs.webkit.org/show_bug.cgi?id=56249\n        // Fetch the base page\n        pageUrl = History.getPageUrl(); // Safari hash apply\n\n        History.pushState(null, null, pageUrl + '#' + hash, false);\n      } else {\n        // Normal hash apply\n        document.location.hash = hash;\n      }\n    } // Chain\n\n\n    return History;\n  };\n  /**\n   * History.escape()\n   * normalize and Escape a Hash\n   * @return {string}\n   */\n\n\n  History.escapeHash = function (hash) {\n    // Prepare\n    var result = History.normalizeHash(hash); // Escape hash\n\n    result = window.encodeURIComponent(result); // IE6 Escape Bug\n\n    if (!History.bugs.hashEscape) {\n      // Restore common parts\n      result = result.replace(/\\%21/g, '!').replace(/\\%26/g, '&').replace(/\\%3D/g, '=').replace(/\\%3F/g, '?');\n    } // Return result\n\n\n    return result;\n  };\n  /**\n   * History.getHashByUrl(url)\n   * Extracts the Hash from a URL\n   * @param {string} url\n   * @return {string} url\n   */\n\n\n  History.getHashByUrl = function (url) {\n    // Extract the hash\n    var hash = String(url).replace(/([^#]*)#?([^#]*)#?(.*)/, '$2'); // Unescape hash\n\n    hash = History.unescapeHash(hash); // Return hash\n\n    return hash;\n  };\n  /**\n   * History.setTitle(title)\n   * Applies the title to the document\n   * @param {State} newState\n   * @return {Boolean}\n   */\n\n\n  History.setTitle = function (newState) {\n    // Prepare\n    var title = newState.title,\n        firstState; // Initial\n\n    if (!title) {\n      firstState = History.getStateByIndex(0);\n\n      if (firstState && firstState.url === newState.url) {\n        title = firstState.title || History.options.initialTitle;\n      }\n    } // Apply\n\n\n    try {\n      document.getElementsByTagName('title')[0].innerHTML = title.replace('<', '&lt;').replace('>', '&gt;').replace(' & ', ' &amp; ');\n    } catch (Exception) {}\n\n    document.title = title; // Chain\n\n    return History;\n  }; // ====================================================================\n  // Queueing\n\n  /**\n   * History.queues\n   * The list of queues to use\n   * First In, First Out\n   */\n\n\n  History.queues = [];\n  /**\n   * History.busy(value)\n   * @param {boolean} value [optional]\n   * @return {boolean} busy\n   */\n\n  History.busy = function (value) {\n    // Apply\n    if (typeof value !== 'undefined') {\n      //History.debug('History.busy: changing ['+(History.busy.flag||false)+'] to ['+(value||false)+']', History.queues.length);\n      History.busy.flag = value;\n    } // Default\n    else if (typeof History.busy.flag === 'undefined') {\n        History.busy.flag = false;\n      } // Queue\n\n\n    if (!History.busy.flag) {\n      // Execute the next item in the queue\n      clearTimeout(History.busy.timeout);\n\n      var fireNext = function () {\n        var i, queue, item;\n        if (History.busy.flag) return;\n\n        for (i = History.queues.length - 1; i >= 0; --i) {\n          queue = History.queues[i];\n          if (queue.length === 0) continue;\n          item = queue.shift();\n          History.fireQueueItem(item);\n          History.busy.timeout = setTimeout(fireNext, History.options.busyDelay);\n        }\n      };\n\n      History.busy.timeout = setTimeout(fireNext, History.options.busyDelay);\n    } // Return\n\n\n    return History.busy.flag;\n  };\n  /**\n   * History.busy.flag\n   */\n\n\n  History.busy.flag = false;\n  /**\n   * History.fireQueueItem(item)\n   * Fire a Queue Item\n   * @param {Object} item\n   * @return {Mixed} result\n   */\n\n  History.fireQueueItem = function (item) {\n    return item.callback.apply(item.scope || History, item.args || []);\n  };\n  /**\n   * History.pushQueue(callback,args)\n   * Add an item to the queue\n   * @param {Object} item [scope,callback,args,queue]\n   */\n\n\n  History.pushQueue = function (item) {\n    // Prepare the queue\n    History.queues[item.queue || 0] = History.queues[item.queue || 0] || []; // Add to the queue\n\n    History.queues[item.queue || 0].push(item); // Chain\n\n    return History;\n  };\n  /**\n   * History.queue (item,queue), (func,queue), (func), (item)\n   * Either firs the item now if not busy, or adds it to the queue\n   */\n\n\n  History.queue = function (item, queue) {\n    // Prepare\n    if (typeof item === 'function') {\n      item = {\n        callback: item\n      };\n    }\n\n    if (typeof queue !== 'undefined') {\n      item.queue = queue;\n    } // Handle\n\n\n    if (History.busy()) {\n      History.pushQueue(item);\n    } else {\n      History.fireQueueItem(item);\n    } // Chain\n\n\n    return History;\n  };\n  /**\n   * History.clearQueue()\n   * Clears the Queue\n   */\n\n\n  History.clearQueue = function () {\n    History.busy.flag = false;\n    History.queues = [];\n    return History;\n  }; // ====================================================================\n  // IE Bug Fix\n\n  /**\n   * History.stateChanged\n   * States whether or not the state has changed since the last double check was initialised\n   */\n\n\n  History.stateChanged = false;\n  /**\n   * History.doubleChecker\n   * Contains the timeout used for the double checks\n   */\n\n  History.doubleChecker = false;\n  /**\n   * History.doubleCheckComplete()\n   * Complete a double check\n   * @return {History}\n   */\n\n  History.doubleCheckComplete = function () {\n    // Update\n    History.stateChanged = true; // Clear\n\n    History.doubleCheckClear(); // Chain\n\n    return History;\n  };\n  /**\n   * History.doubleCheckClear()\n   * Clear a double check\n   * @return {History}\n   */\n\n\n  History.doubleCheckClear = function () {\n    // Clear\n    if (History.doubleChecker) {\n      clearTimeout(History.doubleChecker);\n      History.doubleChecker = false;\n    } // Chain\n\n\n    return History;\n  };\n  /**\n   * History.doubleCheck()\n   * Create a double check\n   * @return {History}\n   */\n\n\n  History.doubleCheck = function (tryAgain) {\n    // Reset\n    History.stateChanged = false;\n    History.doubleCheckClear(); // Fix IE6,IE7 bug where calling history.back or history.forward does not actually change the hash (whereas doing it manually does)\n    // Fix Safari 5 bug where sometimes the state does not change: https://bugs.webkit.org/show_bug.cgi?id=42940\n\n    if (History.bugs.ieDoubleCheck) {\n      // Apply Check\n      History.doubleChecker = setTimeout(function () {\n        History.doubleCheckClear();\n\n        if (!History.stateChanged) {\n          //History.debug('History.doubleCheck: State has not yet changed, trying again', arguments);\n          // Re-Attempt\n          tryAgain();\n        }\n\n        return true;\n      }, History.options.doubleCheckInterval);\n    } // Chain\n\n\n    return History;\n  }; // ====================================================================\n  // Safari Bug Fix\n\n  /**\n   * History.safariStatePoll()\n   * Poll the current state\n   * @return {History}\n   */\n\n\n  History.safariStatePoll = function () {\n    // Poll the URL\n    // Get the Last State which has the new URL\n    var urlState = History.extractState(History.getLocationHref()),\n        newState; // Check for a difference\n\n    if (!History.isLastSavedState(urlState)) {\n      newState = urlState;\n    } else {\n      return;\n    } // Check if we have a state with that url\n    // If not create it\n\n\n    if (!newState) {\n      //History.debug('History.safariStatePoll: new');\n      newState = History.createStateObject();\n    } // Apply the New State\n    //History.debug('History.safariStatePoll: trigger');\n\n\n    History.Adapter.trigger(window, 'popstate'); // Chain\n\n    return History;\n  }; // ====================================================================\n  // State Aliases\n\n  /**\n   * History.back(queue)\n   * Send the browser history back one item\n   * @param {Integer} queue [optional]\n   */\n\n\n  History.back = function (queue) {\n    //History.debug('History.back: called', arguments);\n    // Handle Queueing\n    if (queue !== false && History.busy()) {\n      // Wait + Push to Queue\n      //History.debug('History.back: we must wait', arguments);\n      History.pushQueue({\n        scope: History,\n        callback: History.back,\n        args: arguments,\n        queue: queue\n      });\n      return false;\n    } // Make Busy + Continue\n\n\n    History.busy(true); // Fix certain browser bugs that prevent the state from changing\n\n    History.doubleCheck(function () {\n      History.back(false);\n    }); // Go back\n\n    history.go(-1); // End back closure\n\n    return true;\n  };\n  /**\n   * History.forward(queue)\n   * Send the browser history forward one item\n   * @param {Integer} queue [optional]\n   */\n\n\n  History.forward = function (queue) {\n    //History.debug('History.forward: called', arguments);\n    // Handle Queueing\n    if (queue !== false && History.busy()) {\n      // Wait + Push to Queue\n      //History.debug('History.forward: we must wait', arguments);\n      History.pushQueue({\n        scope: History,\n        callback: History.forward,\n        args: arguments,\n        queue: queue\n      });\n      return false;\n    } // Make Busy + Continue\n\n\n    History.busy(true); // Fix certain browser bugs that prevent the state from changing\n\n    History.doubleCheck(function () {\n      History.forward(false);\n    }); // Go forward\n\n    history.go(1); // End forward closure\n\n    return true;\n  };\n  /**\n   * History.go(index,queue)\n   * Send the browser history back or forward index times\n   * @param {Integer} queue [optional]\n   */\n\n\n  History.go = function (index, queue) {\n    //History.debug('History.go: called', arguments);\n    // Prepare\n    var i; // Handle\n\n    if (index > 0) {\n      // Forward\n      for (i = 1; i <= index; ++i) {\n        History.forward(queue);\n      }\n    } else if (index < 0) {\n      // Backward\n      for (i = -1; i >= index; --i) {\n        History.back(queue);\n      }\n    } else {\n      throw new Error('History.go: History.go requires a positive or negative integer passed.');\n    } // Chain\n\n\n    return History;\n  }; // ====================================================================\n  // HTML5 State Support\n  // Non-Native pushState Implementation\n\n\n  if (History.emulated.pushState) {\n    /*\n     * Provide Skeleton for HTML4 Browsers\n     */\n    // Prepare\n    var emptyFunction = function () {};\n\n    History.pushState = History.pushState || emptyFunction;\n    History.replaceState = History.replaceState || emptyFunction;\n  } // History.emulated.pushState\n  // Native pushState Implementation\n  else {\n      /*\n       * Use native HTML5 History API Implementation\n       */\n\n      /**\n       * History.onPopState(event,extra)\n       * Refresh the Current State\n       */\n      History.onPopState = function (event, extra) {\n        // Prepare\n        var stateId = false,\n            newState = false,\n            currentHash,\n            currentState; // Reset the double check\n\n        History.doubleCheckComplete(); // Check for a Hash, and handle apporiatly\n\n        currentHash = History.getHash();\n\n        if (currentHash) {\n          // Expand Hash\n          currentState = History.extractState(currentHash || History.getLocationHref(), true);\n\n          if (currentState) {\n            // We were able to parse it, it must be a State!\n            // Let's forward to replaceState\n            //History.debug('History.onPopState: state anchor', currentHash, currentState);\n            History.replaceState(currentState.data, currentState.title, currentState.url, false);\n          } else {\n            // Traditional Anchor\n            //History.debug('History.onPopState: traditional anchor', currentHash);\n            History.Adapter.trigger(window, 'anchorchange');\n            History.busy(false);\n          } // We don't care for hashes\n\n\n          History.expectedStateId = false;\n          return false;\n        } // Ensure\n\n\n        stateId = History.Adapter.extractEventData('state', event, extra) || false; // Fetch State\n\n        if (stateId) {\n          // Vanilla: Back/forward button was used\n          newState = History.getStateById(stateId);\n        } else if (History.expectedStateId) {\n          // Vanilla: A new state was pushed, and popstate was called manually\n          newState = History.getStateById(History.expectedStateId);\n        } else {\n          // Initial State\n          newState = History.extractState(History.getLocationHref());\n        } // The State did not exist in our store\n\n\n        if (!newState) {\n          // Regenerate the State\n          newState = History.createStateObject(null, null, History.getLocationHref());\n        } // Clean\n\n\n        History.expectedStateId = false; // Check if we are the same state\n\n        if (History.isLastSavedState(newState)) {\n          // There has been no change (just the page's hash has finally propagated)\n          //History.debug('History.onPopState: no change', newState, History.savedStates);\n          History.busy(false);\n          return false;\n        } // Store the State\n\n\n        History.storeState(newState);\n        History.saveState(newState); // Force update of the title\n\n        History.setTitle(newState); // Fire Our Event\n\n        History.Adapter.trigger(window, 'statechange');\n        History.busy(false); // Return true\n\n        return true;\n      };\n\n      History.Adapter.bind(window, 'popstate', History.onPopState);\n      /**\n       * History.pushState(data,title,url)\n       * Add a new State to the history object, become it, and trigger onpopstate\n       * We have to trigger for HTML4 compatibility\n       * @param {object} data\n       * @param {string} title\n       * @param {string} url\n       * @return {true}\n       */\n\n      History.pushState = function (data, title, url, queue) {\n        //History.debug('History.pushState: called', arguments);\n        // Check the State\n        if (History.getHashByUrl(url) && History.emulated.pushState) {\n          throw new Error('History.js does not support states with fragement-identifiers (hashes/anchors).');\n        } // Handle Queueing\n\n\n        if (queue !== false && History.busy()) {\n          // Wait + Push to Queue\n          //History.debug('History.pushState: we must wait', arguments);\n          History.pushQueue({\n            scope: History,\n            callback: History.pushState,\n            args: arguments,\n            queue: queue\n          });\n          return false;\n        } // Make Busy + Continue\n\n\n        History.busy(true); // Create the newState\n\n        var newState = History.createStateObject(data, title, url); // Check it\n\n        if (History.isLastSavedState(newState)) {\n          // Won't be a change\n          History.busy(false);\n        } else {\n          // Store the newState\n          History.storeState(newState);\n          History.expectedStateId = newState.id; // Push the newState\n\n          history.pushState(newState.id, newState.title, newState.url); // Fire HTML5 Event\n\n          History.Adapter.trigger(window, 'popstate');\n        } // End pushState closure\n\n\n        return true;\n      };\n      /**\n       * History.replaceState(data,title,url)\n       * Replace the State and trigger onpopstate\n       * We have to trigger for HTML4 compatibility\n       * @param {object} data\n       * @param {string} title\n       * @param {string} url\n       * @return {true}\n       */\n\n\n      History.replaceState = function (data, title, url, queue) {\n        //History.debug('History.replaceState: called', arguments);\n        // Check the State\n        if (History.getHashByUrl(url) && History.emulated.pushState) {\n          throw new Error('History.js does not support states with fragement-identifiers (hashes/anchors).');\n        } // Handle Queueing\n\n\n        if (queue !== false && History.busy()) {\n          // Wait + Push to Queue\n          //History.debug('History.replaceState: we must wait', arguments);\n          History.pushQueue({\n            scope: History,\n            callback: History.replaceState,\n            args: arguments,\n            queue: queue\n          });\n          return false;\n        } // Make Busy + Continue\n\n\n        History.busy(true); // Create the newState\n\n        var newState = History.createStateObject(data, title, url); // Check it\n\n        if (History.isLastSavedState(newState)) {\n          // Won't be a change\n          History.busy(false);\n        } else {\n          // Store the newState\n          History.storeState(newState);\n          History.expectedStateId = newState.id; // Push the newState\n\n          history.replaceState(newState.id, newState.title, newState.url); // Fire HTML5 Event\n\n          History.Adapter.trigger(window, 'popstate');\n        } // End replaceState closure\n\n\n        return true;\n      };\n    } // !History.emulated.pushState\n  // ====================================================================\n  // Initialise\n\n  /**\n   * Load the Store\n   */\n\n\n  if (sessionStorage) {\n    // Fetch\n    try {\n      History.store = JSON.parse(sessionStorage.getItem('History.store')) || {};\n    } catch (err) {\n      History.store = {};\n    } // Normalize\n\n\n    History.normalizeStore();\n  } else {\n    // Default Load\n    History.store = {};\n    History.normalizeStore();\n  }\n  /**\n   * Clear Intervals on exit to prevent memory leaks\n   */\n\n\n  History.Adapter.bind(window, \"unload\", History.clearAllIntervals);\n  /**\n   * Create the initial State\n   */\n\n  History.saveState(History.storeState(History.extractState(History.getLocationHref(), true)));\n  /**\n   * Bind for Saving Store\n   */\n\n  if (sessionStorage) {\n    // When the page is closed\n    History.onUnload = function () {\n      // Prepare\n      var currentStore, item, currentStoreString; // Fetch\n\n      try {\n        currentStore = JSON.parse(sessionStorage.getItem('History.store')) || {};\n      } catch (err) {\n        currentStore = {};\n      } // Ensure\n\n\n      currentStore.idToState = currentStore.idToState || {};\n      currentStore.urlToId = currentStore.urlToId || {};\n      currentStore.stateToId = currentStore.stateToId || {}; // Sync\n\n      for (item in History.idToState) {\n        if (!History.idToState.hasOwnProperty(item)) {\n          continue;\n        }\n\n        currentStore.idToState[item] = History.idToState[item];\n      }\n\n      for (item in History.urlToId) {\n        if (!History.urlToId.hasOwnProperty(item)) {\n          continue;\n        }\n\n        currentStore.urlToId[item] = History.urlToId[item];\n      }\n\n      for (item in History.stateToId) {\n        if (!History.stateToId.hasOwnProperty(item)) {\n          continue;\n        }\n\n        currentStore.stateToId[item] = History.stateToId[item];\n      } // Update\n\n\n      History.store = currentStore;\n      History.normalizeStore(); // In Safari, going into Private Browsing mode causes the\n      // Session Storage object to still exist but if you try and use\n      // or set any property/function of it it throws the exception\n      // \"QUOTA_EXCEEDED_ERR: DOM Exception 22: An attempt was made to\n      // add something to storage that exceeded the quota.\" infinitely\n      // every second.\n\n      currentStoreString = JSON.stringify(currentStore);\n\n      try {\n        // Store\n        sessionStorage.setItem('History.store', currentStoreString);\n      } catch (e) {\n        if (e.code === DOMException.QUOTA_EXCEEDED_ERR) {\n          if (sessionStorage.length) {\n            // Workaround for a bug seen on iPads. Sometimes the quota exceeded error comes up and simply\n            // removing/resetting the storage can work.\n            sessionStorage.removeItem('History.store');\n            sessionStorage.setItem('History.store', currentStoreString);\n          } else {// Otherwise, we're probably private browsing in Safari, so we'll ignore the exception.\n          }\n        } else {\n          throw e;\n        }\n      }\n    }; // For Internet Explorer\n\n\n    History.intervalList.push(setInterval(History.onUnload, History.options.storeInterval)); // For Other Browsers\n\n    History.Adapter.bind(window, 'beforeunload', History.onUnload);\n    History.Adapter.bind(window, 'unload', History.onUnload); // Both are enabled for consistency\n  } // Non-Native pushState Implementation\n\n\n  if (!History.emulated.pushState) {\n    // Be aware, the following is only for native pushState implementations\n    // If you are wanting to include something for all browsers\n    // Then include it above this if block\n\n    /**\n     * Setup Safari Fix\n     */\n    if (History.bugs.safariPoll) {\n      History.intervalList.push(setInterval(History.safariStatePoll, History.options.safariPollInterval));\n    }\n    /**\n     * Ensure Cross Browser Compatibility\n     */\n\n\n    if (navigator.vendor === 'Apple Computer, Inc.' || (navigator.appCodeName || '') === 'Mozilla') {\n      /**\n       * Fix Safari HashChange Issue\n       */\n      // Setup Alias\n      History.Adapter.bind(window, 'hashchange', function () {\n        History.Adapter.trigger(window, 'popstate');\n      }); // Initialise Alias\n\n      if (History.getHash()) {\n        History.Adapter.onDomLoad(function () {\n          History.Adapter.trigger(window, 'hashchange');\n        });\n      }\n    }\n  } // !History.emulated.pushState\n\n}; // History.initCore\n// Try to Initialise History\n\n\nif (!History.options || !History.options.delayInit) {\n  History.init();\n}","map":{"version":3,"sources":["/home/junior/work/backbone/store-track/node_modules/browser-router/html5-history/index.js"],"names":["navigator","window","sessionStorage","setTimeout","clearTimeout","setInterval","clearInterval","JSON","alert","History","module","exports","history","setItem","removeItem","e","stringify","encode","parse","decode","init","Error","Adapter","require","options","process","title","initCore","initialized","hashChangeInterval","safariPollInterval","doubleCheckInterval","disableSuid","storeInterval","busyDelay","debug","initialTitle","document","html4Mode","delayInit","intervalList","clearAllIntervals","i","il","length","log","apply","arguments","consoleExists","console","textarea","getElementById","message","n","args","arg","Array","prototype","slice","call","shift","Exception","value","scrollTop","scrollHeight","clientHeight","getInternetExplorerMajorVersion","result","cached","v","div","createElement","all","getElementsByTagName","innerHTML","isInternetExplorer","Boolean","emulated","pushState","hashChange","replaceState","test","userAgent","enabled","bugs","setHash","vendor","safariPoll","ieDoubleCheck","hashEscape","isEmptyObject","obj","name","hasOwnProperty","cloneObject","hash","newObj","getRootUrl","rootUrl","location","protocol","hostname","host","port","getBaseHref","baseElements","baseElement","baseHref","href","replace","getBaseUrl","baseUrl","getBasePageUrl","getPageUrl","State","getState","stateUrl","url","getLocationHref","pageUrl","part","index","string","basePageUrl","getFullUrl","allowBaseHref","fullUrl","firstChar","substring","getShortUrl","shortUrl","isTraditionalAnchor","doc","URL","decodeURIComponent","indexOf","store","idToState","stateToId","urlToId","storedStates","savedStates","normalizeStore","friendly","create","getLastSavedState","createStateObject","cleanUrl","getIdByState","newState","id","extractId","str","getStateString","Date","getTime","String","Math","random","normalizeState","oldState","dataNotEmpty","normalized","data","hashedUrl","hasUrlDuplicate","getStateById","undefined","passedState","cleanedState","getStateId","getHashByState","url_or_hash","parts","tmp","split","exec","isTraditional","extractState","getIdByUrl","getLastStoredState","hasDuplicate","storeState","push","isLastSavedState","isLast","newId","oldId","saveState","getStateByIndex","getCurrentIndex","getHash","getHashByUrl","unescapeHash","normalizeHash","queue","busy","pushQueue","scope","callback","escapeHash","encodeURIComponent","setTitle","firstState","queues","flag","timeout","fireNext","item","fireQueueItem","clearQueue","stateChanged","doubleChecker","doubleCheckComplete","doubleCheckClear","doubleCheck","tryAgain","safariStatePoll","urlState","trigger","back","go","forward","emptyFunction","onPopState","event","extra","stateId","currentHash","currentState","expectedStateId","extractEventData","bind","getItem","err","onUnload","currentStore","currentStoreString","code","DOMException","QUOTA_EXCEEDED_ERR","appCodeName","onDomLoad"],"mappings":"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","sourcesContent":["/**\n * History.js Core\n * @author Benjamin Arthur Lupton <contact@balupton.com>\n * @copyright 2010-2011 Benjamin Arthur Lupton <contact@balupton.com>\n * @license New BSD License <http://creativecommons.org/licenses/BSD/>\n */\n\n\n// ========================================================================\n// Initialise\n\n// Localise Globals\nvar navigator = window.navigator, // Make sure we are using the correct navigator\n    sessionStorage = window.sessionStorage||false, // sessionStorage\n    setTimeout = window.setTimeout,\n    clearTimeout = window.clearTimeout,\n    setInterval = window.setInterval,\n    clearInterval = window.clearInterval,\n    JSON = window.JSON,\n    alert = window.alert,\n    History = module.exports = {},\n    history = window.history; // Old History Object\n\ntry {\n    sessionStorage.setItem('TEST', '1');\n    sessionStorage.removeItem('TEST');\n} catch(e) {\n    sessionStorage = false;\n}\n\n// MooTools Compatibility\nJSON.stringify = JSON.stringify||JSON.encode;\nJSON.parse = JSON.parse||JSON.decode;\n\n// Check Existence\nif ( typeof History.init !== 'undefined' ) {\n    throw new Error('History.js Core has already been loaded...');\n}\n\nHistory.Adapter = require('./adapter.js')\n\n// Initialise History\nHistory.init = function(options){\n    // Check Load Status of Adapter\n    if ( typeof History.Adapter === 'undefined' ) {\n        return false;\n    }\n\n    if ( process.title === 'node' ) {\n        return\n    }\n\n    // Check Load Status of Core\n    if ( typeof History.initCore !== 'undefined' ) {\n        History.initCore();\n    }\n\n    // Check Load Status of HTML4 Support\n    // if ( typeof History.initHtml4 !== 'undefined' ) {\n    //     History.initHtml4();\n    // }\n\n    // Return true\n    return true;\n};\n\n\n// ========================================================================\n// Initialise Core\n\n// Initialise Core\nHistory.initCore = function(options){\n    // Initialise\n    if ( typeof History.initCore.initialized !== 'undefined' ) {\n        // Already Loaded\n        return false;\n    }\n    else {\n        History.initCore.initialized = true;\n    }\n\n\n    // ====================================================================\n    // Options\n\n    /**\n     * History.options\n     * Configurable options\n     */\n    History.options = History.options||{};\n\n    /**\n     * History.options.hashChangeInterval\n     * How long should the interval be before hashchange checks\n     */\n    History.options.hashChangeInterval = History.options.hashChangeInterval || 100;\n\n    /**\n     * History.options.safariPollInterval\n     * How long should the interval be before safari poll checks\n     */\n    History.options.safariPollInterval = History.options.safariPollInterval || 500;\n\n    /**\n     * History.options.doubleCheckInterval\n     * How long should the interval be before we perform a double check\n     */\n    History.options.doubleCheckInterval = History.options.doubleCheckInterval || 500;\n\n    /**\n     * History.options.disableSuid\n     * Force History not to append suid\n     */\n    History.options.disableSuid = History.options.disableSuid || false;\n\n    /**\n     * History.options.storeInterval\n     * How long should we wait between store calls\n     */\n    History.options.storeInterval = History.options.storeInterval || 1000;\n\n    /**\n     * History.options.busyDelay\n     * How long should we wait between busy events\n     */\n    History.options.busyDelay = History.options.busyDelay || 250;\n\n    /**\n     * History.options.debug\n     * If true will enable debug messages to be logged\n     */\n    History.options.debug = History.options.debug || false;\n\n    /**\n     * History.options.initialTitle\n     * What is the title of the initial state\n     */\n    History.options.initialTitle = History.options.initialTitle || document.title;\n\n    /**\n     * History.options.html4Mode\n     * If true, will force HTMl4 mode (hashtags)\n     */\n    History.options.html4Mode = History.options.html4Mode || false;\n\n    /**\n     * History.options.delayInit\n     * Want to override default options and call init manually.\n     */\n    History.options.delayInit = History.options.delayInit || false;\n\n\n    // ====================================================================\n    // Interval record\n\n    /**\n     * History.intervalList\n     * List of intervals set, to be cleared when document is unloaded.\n     */\n    History.intervalList = [];\n\n    /**\n     * History.clearAllIntervals\n     * Clears all setInterval instances.\n     */\n    History.clearAllIntervals = function(){\n        var i, il = History.intervalList;\n        if (typeof il !== \"undefined\" && il !== null) {\n            for (i = 0; i < il.length; i++) {\n                clearInterval(il[i]);\n            }\n            History.intervalList = null;\n        }\n    };\n\n\n    // ====================================================================\n    // Debug\n\n    /**\n     * History.debug(message,...)\n     * Logs the passed arguments if debug enabled\n     */\n    History.debug = function(){\n        if ( (History.options.debug||false) ) {\n            History.log.apply(History,arguments);\n        }\n    };\n\n    /**\n     * History.log(message,...)\n     * Logs the passed arguments\n     */\n    History.log = function(){\n        // Prepare\n        var\n            consoleExists = !(typeof console === 'undefined' || typeof console.log === 'undefined' || typeof console.log.apply === 'undefined'),\n            textarea = document.getElementById('log'),\n            message,\n            i,n,\n            args,arg\n            ;\n\n        // Write to Console\n        if ( consoleExists ) {\n            args = Array.prototype.slice.call(arguments);\n            message = args.shift();\n            if ( typeof console.debug !== 'undefined' ) {\n                console.debug.apply(console,[message,args]);\n            }\n            else {\n                console.log.apply(console,[message,args]);\n            }\n        }\n        else {\n            message = (\"\\n\"+arguments[0]+\"\\n\");\n        }\n\n        // Write to log\n        for ( i=1,n=arguments.length; i<n; ++i ) {\n            arg = arguments[i];\n            if ( typeof arg === 'object' && typeof JSON !== 'undefined' ) {\n                try {\n                    arg = JSON.stringify(arg);\n                }\n                catch ( Exception ) {\n                    // Recursive Object\n                }\n            }\n            message += \"\\n\"+arg+\"\\n\";\n        }\n\n        // Textarea\n        if ( textarea ) {\n            textarea.value += message+\"\\n-----\\n\";\n            textarea.scrollTop = textarea.scrollHeight - textarea.clientHeight;\n        }\n        // No Textarea, No Console\n        else if ( !consoleExists ) {\n            alert(message);\n        }\n\n        // Return true\n        return true;\n    };\n\n\n    // ====================================================================\n    // Emulated Status\n\n    /**\n     * History.getInternetExplorerMajorVersion()\n     * Get's the major version of Internet Explorer\n     * @return {integer}\n     * @license Public Domain\n     * @author Benjamin Arthur Lupton <contact@balupton.com>\n     * @author James Padolsey <https://gist.github.com/527683>\n     */\n    History.getInternetExplorerMajorVersion = function(){\n        var result = History.getInternetExplorerMajorVersion.cached =\n                (typeof History.getInternetExplorerMajorVersion.cached !== 'undefined')\n            ?   History.getInternetExplorerMajorVersion.cached\n            :   (function(){\n                    var v = 3,\n                            div = document.createElement('div'),\n                            all = div.getElementsByTagName('i');\n                    while ( (div.innerHTML = '<!--[if gt IE ' + (++v) + ']><i></i><![endif]-->') && all[0] ) {}\n                    return (v > 4) ? v : false;\n                })()\n            ;\n        return result;\n    };\n\n    /**\n     * History.isInternetExplorer()\n     * Are we using Internet Explorer?\n     * @return {boolean}\n     * @license Public Domain\n     * @author Benjamin Arthur Lupton <contact@balupton.com>\n     */\n    History.isInternetExplorer = function(){\n        var result =\n            History.isInternetExplorer.cached =\n            (typeof History.isInternetExplorer.cached !== 'undefined')\n                ?   History.isInternetExplorer.cached\n                :   Boolean(History.getInternetExplorerMajorVersion())\n            ;\n        return result;\n    };\n\n    /**\n     * History.emulated\n     * Which features require emulating?\n     */\n\n    if (History.options.html4Mode) {\n        History.emulated = {\n            pushState : true,\n            hashChange: true\n        };\n    }\n\n    else {\n\n        History.emulated = {\n            pushState: !Boolean(\n                window.history && window.history.pushState && window.history.replaceState\n                && !(\n                    (/ Mobile\\/([1-7][a-z]|(8([abcde]|f(1[0-8]))))/i).test(navigator.userAgent) /* disable for versions of iOS before version 4.3 (8F190) */\n                    || (/AppleWebKit\\/5([0-2]|3[0-2])/i).test(navigator.userAgent) /* disable for the mercury iOS browser, or at least older versions of the webkit engine */\n                )\n            ),\n            hashChange: Boolean(\n                !(('onhashchange' in window) || ('onhashchange' in document))\n                ||\n                (History.isInternetExplorer() && History.getInternetExplorerMajorVersion() < 8)\n            )\n        };\n    }\n\n    /**\n     * History.enabled\n     * Is History enabled?\n     */\n    History.enabled = !History.emulated.pushState;\n\n    /**\n     * History.bugs\n     * Which bugs are present\n     */\n    History.bugs = {\n        /**\n         * Safari 5 and Safari iOS 4 fail to return to the correct state once a hash is replaced by a `replaceState` call\n         * https://bugs.webkit.org/show_bug.cgi?id=56249\n         */\n        setHash: Boolean(!History.emulated.pushState && navigator.vendor === 'Apple Computer, Inc.' && /AppleWebKit\\/5([0-2]|3[0-3])/.test(navigator.userAgent)),\n\n        /**\n         * Safari 5 and Safari iOS 4 sometimes fail to apply the state change under busy conditions\n         * https://bugs.webkit.org/show_bug.cgi?id=42940\n         */\n        safariPoll: Boolean(!History.emulated.pushState && navigator.vendor === 'Apple Computer, Inc.' && /AppleWebKit\\/5([0-2]|3[0-3])/.test(navigator.userAgent)),\n\n        /**\n         * MSIE 6 and 7 sometimes do not apply a hash even it was told to (requiring a second call to the apply function)\n         */\n        ieDoubleCheck: Boolean(History.isInternetExplorer() && History.getInternetExplorerMajorVersion() < 8),\n\n        /**\n         * MSIE 6 requires the entire hash to be encoded for the hashes to trigger the onHashChange event\n         */\n        hashEscape: Boolean(History.isInternetExplorer() && History.getInternetExplorerMajorVersion() < 7)\n    };\n\n    /**\n     * History.isEmptyObject(obj)\n     * Checks to see if the Object is Empty\n     * @param {Object} obj\n     * @return {boolean}\n     */\n    History.isEmptyObject = function(obj) {\n        for ( var name in obj ) {\n            if ( obj.hasOwnProperty(name) ) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n    /**\n     * History.cloneObject(obj)\n     * Clones a object and eliminate all references to the original contexts\n     * @param {Object} obj\n     * @return {Object}\n     */\n    History.cloneObject = function(obj) {\n        var hash,newObj;\n        if ( obj ) {\n            hash = JSON.stringify(obj);\n            newObj = JSON.parse(hash);\n        }\n        else {\n            newObj = {};\n        }\n        return newObj;\n    };\n\n\n    // ====================================================================\n    // URL Helpers\n\n    /**\n     * History.getRootUrl()\n     * Turns \"http://mysite.com/dir/page.html?asd\" into \"http://mysite.com\"\n     * @return {String} rootUrl\n     */\n    History.getRootUrl = function(){\n        // Create\n        var rootUrl = document.location.protocol+'//'+(document.location.hostname||document.location.host);\n        if ( document.location.port||false ) {\n            rootUrl += ':'+document.location.port;\n        }\n        rootUrl += '/';\n\n        // Return\n        return rootUrl;\n    };\n\n    /**\n     * History.getBaseHref()\n     * Fetches the `href` attribute of the `<base href=\"...\">` element if it exists\n     * @return {String} baseHref\n     */\n    History.getBaseHref = function(){\n        // Create\n        var\n            baseElements = document.getElementsByTagName('base'),\n            baseElement = null,\n            baseHref = '';\n\n        // Test for Base Element\n        if ( baseElements.length === 1 ) {\n            // Prepare for Base Element\n            baseElement = baseElements[0];\n            baseHref = baseElement.href.replace(/[^\\/]+$/,'');\n        }\n\n        // Adjust trailing slash\n        baseHref = baseHref.replace(/\\/+$/,'');\n        if ( baseHref ) baseHref += '/';\n\n        // Return\n        return baseHref;\n    };\n\n    /**\n     * History.getBaseUrl()\n     * Fetches the baseHref or basePageUrl or rootUrl (whichever one exists first)\n     * @return {String} baseUrl\n     */\n    History.getBaseUrl = function(){\n        // Create\n        var baseUrl = History.getBaseHref()||History.getBasePageUrl()||History.getRootUrl();\n\n        // Return\n        return baseUrl;\n    };\n\n    /**\n     * History.getPageUrl()\n     * Fetches the URL of the current page\n     * @return {String} pageUrl\n     */\n    History.getPageUrl = function(){\n        // Fetch\n        var\n            State = History.getState(false,false),\n            stateUrl = (State||{}).url||History.getLocationHref(),\n            pageUrl;\n\n        // Create\n        pageUrl = stateUrl.replace(/\\/+$/,'').replace(/[^\\/]+$/,function(part,index,string){\n            return (/\\./).test(part) ? part : part+'/';\n        });\n\n        // Return\n        return pageUrl;\n    };\n\n    /**\n     * History.getBasePageUrl()\n     * Fetches the Url of the directory of the current page\n     * @return {String} basePageUrl\n     */\n    History.getBasePageUrl = function(){\n        // Create\n        var basePageUrl = (History.getLocationHref()).replace(/[#\\?].*/,'').replace(/[^\\/]+$/,function(part,index,string){\n            return (/[^\\/]$/).test(part) ? '' : part;\n        }).replace(/\\/+$/,'')+'/';\n\n        // Return\n        return basePageUrl;\n    };\n\n    /**\n     * History.getFullUrl(url)\n     * Ensures that we have an absolute URL and not a relative URL\n     * @param {string} url\n     * @param {Boolean} allowBaseHref\n     * @return {string} fullUrl\n     */\n    History.getFullUrl = function(url,allowBaseHref){\n        // Prepare\n        var fullUrl = url, firstChar = url.substring(0,1);\n        allowBaseHref = (typeof allowBaseHref === 'undefined') ? true : allowBaseHref;\n\n        // Check\n        if ( /[a-z]+\\:\\/\\//.test(url) ) {\n            // Full URL\n        }\n        else if ( firstChar === '/' ) {\n            // Root URL\n            fullUrl = History.getRootUrl()+url.replace(/^\\/+/,'');\n        }\n        else if ( firstChar === '#' ) {\n            // Anchor URL\n            fullUrl = History.getPageUrl().replace(/#.*/,'')+url;\n        }\n        else if ( firstChar === '?' ) {\n            // Query URL\n            fullUrl = History.getPageUrl().replace(/[\\?#].*/,'')+url;\n        }\n        else {\n            // Relative URL\n            if ( allowBaseHref ) {\n                fullUrl = History.getBaseUrl()+url.replace(/^(\\.\\/)+/,'');\n            } else {\n                fullUrl = History.getBasePageUrl()+url.replace(/^(\\.\\/)+/,'');\n            }\n            // We have an if condition above as we do not want hashes\n            // which are relative to the baseHref in our URLs\n            // as if the baseHref changes, then all our bookmarks\n            // would now point to different locations\n            // whereas the basePageUrl will always stay the same\n        }\n\n        // Return\n        return fullUrl.replace(/\\#$/,'');\n    };\n\n    /**\n     * History.getShortUrl(url)\n     * Ensures that we have a relative URL and not a absolute URL\n     * @param {string} url\n     * @return {string} url\n     */\n    History.getShortUrl = function(url){\n        // Prepare\n        var shortUrl = url, baseUrl = History.getBaseUrl(), rootUrl = History.getRootUrl();\n\n        // Trim baseUrl\n        if ( History.emulated.pushState ) {\n            // We are in a if statement as when pushState is not emulated\n            // The actual url these short urls are relative to can change\n            // So within the same session, we the url may end up somewhere different\n            shortUrl = shortUrl.replace(baseUrl,'');\n        }\n\n        // Trim rootUrl\n        shortUrl = shortUrl.replace(rootUrl,'/');\n\n        // Ensure we can still detect it as a state\n        if ( History.isTraditionalAnchor(shortUrl) ) {\n            shortUrl = './'+shortUrl;\n        }\n\n        // Clean It\n        shortUrl = shortUrl.replace(/^(\\.\\/)+/g,'./').replace(/\\#$/,'');\n\n        // Return\n        return shortUrl;\n    };\n\n    /**\n     * History.getLocationHref(document)\n     * Returns a normalized version of document.location.href\n     * accounting for browser inconsistencies, etc.\n     *\n     * This URL will be URI-encoded and will include the hash\n     *\n     * @param {object} document\n     * @return {string} url\n     */\n    History.getLocationHref = function(doc) {\n        doc = doc || document;\n\n        // most of the time, this will be true\n        if (doc.URL === doc.location.href)\n            return doc.location.href;\n\n        // some versions of webkit URI-decode document.location.href\n        // but they leave document.URL in an encoded state\n        if (doc.location.href === decodeURIComponent(doc.URL))\n            return doc.URL;\n\n        // FF 3.6 only updates document.URL when a page is reloaded\n        // document.location.href is updated correctly\n        if (doc.location.hash && decodeURIComponent(doc.location.href.replace(/^[^#]+/, \"\")) === doc.location.hash)\n            return doc.location.href;\n\n        if (doc.URL.indexOf('#') == -1 && doc.location.href.indexOf('#') != -1)\n            return doc.location.href;\n\n        return doc.URL || doc.location.href;\n    };\n\n\n    // ====================================================================\n    // State Storage\n\n    /**\n     * History.store\n     * The store for all session specific data\n     */\n    History.store = {};\n\n    /**\n     * History.idToState\n     * 1-1: State ID to State Object\n     */\n    History.idToState = History.idToState||{};\n\n    /**\n     * History.stateToId\n     * 1-1: State String to State ID\n     */\n    History.stateToId = History.stateToId||{};\n\n    /**\n     * History.urlToId\n     * 1-1: State URL to State ID\n     */\n    History.urlToId = History.urlToId||{};\n\n    /**\n     * History.storedStates\n     * Store the states in an array\n     */\n    History.storedStates = History.storedStates||[];\n\n    /**\n     * History.savedStates\n     * Saved the states in an array\n     */\n    History.savedStates = History.savedStates||[];\n\n    /**\n     * History.noramlizeStore()\n     * Noramlize the store by adding necessary values\n     */\n    History.normalizeStore = function(){\n        History.store.idToState = History.store.idToState||{};\n        History.store.urlToId = History.store.urlToId||{};\n        History.store.stateToId = History.store.stateToId||{};\n    };\n\n    /**\n     * History.getState()\n     * Get an object containing the data, title and url of the current state\n     * @param {Boolean} friendly\n     * @param {Boolean} create\n     * @return {Object} State\n     */\n    History.getState = function(friendly,create){\n        // Prepare\n        if ( typeof friendly === 'undefined' ) { friendly = true; }\n        if ( typeof create === 'undefined' ) { create = true; }\n\n        // Fetch\n        var State = History.getLastSavedState();\n\n        // Create\n        if ( !State && create ) {\n            State = History.createStateObject();\n        }\n\n        // Adjust\n        if ( friendly ) {\n            State = History.cloneObject(State);\n            State.url = State.cleanUrl||State.url;\n        }\n\n        // Return\n        return State;\n    };\n\n    /**\n     * History.getIdByState(State)\n     * Gets a ID for a State\n     * @param {State} newState\n     * @return {String} id\n     */\n    History.getIdByState = function(newState){\n\n        // Fetch ID\n        var id = History.extractId(newState.url),\n            str;\n\n        if ( !id ) {\n            // Find ID via State String\n            str = History.getStateString(newState);\n            if ( typeof History.stateToId[str] !== 'undefined' ) {\n                id = History.stateToId[str];\n            }\n            else if ( typeof History.store.stateToId[str] !== 'undefined' ) {\n                id = History.store.stateToId[str];\n            }\n            else {\n                // Generate a new ID\n                while ( true ) {\n                    id = (new Date()).getTime() + String(Math.random()).replace(/\\D/g,'');\n                    if ( typeof History.idToState[id] === 'undefined' && typeof History.store.idToState[id] === 'undefined' ) {\n                        break;\n                    }\n                }\n\n                // Apply the new State to the ID\n                History.stateToId[str] = id;\n                History.idToState[id] = newState;\n            }\n        }\n\n        // Return ID\n        return id;\n    };\n\n    /**\n     * History.normalizeState(State)\n     * Expands a State Object\n     * @param {object} State\n     * @return {object}\n     */\n    History.normalizeState = function(oldState){\n        // Variables\n        var newState, dataNotEmpty;\n\n        // Prepare\n        if ( !oldState || (typeof oldState !== 'object') ) {\n            oldState = {};\n        }\n\n        // Check\n        if ( typeof oldState.normalized !== 'undefined' ) {\n            return oldState;\n        }\n\n        // Adjust\n        if ( !oldState.data || (typeof oldState.data !== 'object') ) {\n            oldState.data = {};\n        }\n\n        // ----------------------------------------------------------------\n\n        // Create\n        newState = {};\n        newState.normalized = true;\n        newState.title = oldState.title||'';\n        newState.url = History.getFullUrl(oldState.url?oldState.url:(History.getLocationHref()));\n        newState.hash = History.getShortUrl(newState.url);\n        newState.data = History.cloneObject(oldState.data);\n\n        // Fetch ID\n        newState.id = History.getIdByState(newState);\n\n        // ----------------------------------------------------------------\n\n        // Clean the URL\n        newState.cleanUrl = newState.url.replace(/\\??\\&_suid.*/,'');\n        newState.url = newState.cleanUrl;\n\n        // Check to see if we have more than just a url\n        dataNotEmpty = !History.isEmptyObject(newState.data);\n\n        // Apply\n        if ( (newState.title || dataNotEmpty) && History.options.disableSuid !== true ) {\n            // Add ID to Hash\n            newState.hash = History.getShortUrl(newState.url).replace(/\\??\\&_suid.*/,'');\n            if ( !/\\?/.test(newState.hash) ) {\n                newState.hash += '?';\n            }\n            newState.hash += '&_suid='+newState.id;\n        }\n\n        // Create the Hashed URL\n        newState.hashedUrl = History.getFullUrl(newState.hash);\n\n        // ----------------------------------------------------------------\n\n        // Update the URL if we have a duplicate\n        if ( (History.emulated.pushState || History.bugs.safariPoll) && History.hasUrlDuplicate(newState) ) {\n            newState.url = newState.hashedUrl;\n        }\n\n        // ----------------------------------------------------------------\n\n        // Return\n        return newState;\n    };\n\n    /**\n     * History.createStateObject(data,title,url)\n     * Creates a object based on the data, title and url state params\n     * @param {object} data\n     * @param {string} title\n     * @param {string} url\n     * @return {object}\n     */\n    History.createStateObject = function(data,title,url){\n        // Hashify\n        var State = {\n            'data': data,\n            'title': title,\n            'url': url\n        };\n\n        // Expand the State\n        State = History.normalizeState(State);\n\n        // Return object\n        return State;\n    };\n\n    /**\n     * History.getStateById(id)\n     * Get a state by it's UID\n     * @param {String} id\n     */\n    History.getStateById = function(id){\n        // Prepare\n        id = String(id);\n\n        // Retrieve\n        var State = History.idToState[id] || History.store.idToState[id] || undefined;\n\n        // Return State\n        return State;\n    };\n\n    /**\n     * Get a State's String\n     * @param {State} passedState\n     */\n    History.getStateString = function(passedState){\n        // Prepare\n        var State, cleanedState, str;\n\n        // Fetch\n        State = History.normalizeState(passedState);\n\n        // Clean\n        cleanedState = {\n            data: State.data,\n            title: passedState.title,\n            url: passedState.url\n        };\n\n        // Fetch\n        str = JSON.stringify(cleanedState);\n\n        // Return\n        return str;\n    };\n\n    /**\n     * Get a State's ID\n     * @param {State} passedState\n     * @return {String} id\n     */\n    History.getStateId = function(passedState){\n        // Prepare\n        var State, id;\n\n        // Fetch\n        State = History.normalizeState(passedState);\n\n        // Fetch\n        id = State.id;\n\n        // Return\n        return id;\n    };\n\n    /**\n     * History.getHashByState(State)\n     * Creates a Hash for the State Object\n     * @param {State} passedState\n     * @return {String} hash\n     */\n    History.getHashByState = function(passedState){\n        // Prepare\n        var State, hash;\n\n        // Fetch\n        State = History.normalizeState(passedState);\n\n        // Hash\n        hash = State.hash;\n\n        // Return\n        return hash;\n    };\n\n    /**\n     * History.extractId(url_or_hash)\n     * Get a State ID by it's URL or Hash\n     * @param {string} url_or_hash\n     * @return {string} id\n     */\n    History.extractId = function ( url_or_hash ) {\n        // Prepare\n        var id,parts,url, tmp;\n\n        // Extract\n\n        // If the URL has a #, use the id from before the #\n        if (url_or_hash.indexOf('#') != -1)\n        {\n            tmp = url_or_hash.split(\"#\")[0];\n        }\n        else\n        {\n            tmp = url_or_hash;\n        }\n\n        parts = /(.*)\\&_suid=([0-9]+)$/.exec(tmp);\n        url = parts ? (parts[1]||url_or_hash) : url_or_hash;\n        id = parts ? String(parts[2]||'') : '';\n\n        // Return\n        return id||false;\n    };\n\n    /**\n     * History.isTraditionalAnchor\n     * Checks to see if the url is a traditional anchor or not\n     * @param {String} url_or_hash\n     * @return {Boolean}\n     */\n    History.isTraditionalAnchor = function(url_or_hash){\n        // Check\n        var isTraditional = !(/[\\/\\?\\.]/.test(url_or_hash));\n\n        // Return\n        return isTraditional;\n    };\n\n    /**\n     * History.extractState\n     * Get a State by it's URL or Hash\n     * @param {String} url_or_hash\n     * @return {State|null}\n     */\n    History.extractState = function(url_or_hash,create){\n        // Prepare\n        var State = null, id, url;\n        create = create||false;\n\n        // Fetch SUID\n        id = History.extractId(url_or_hash);\n        if ( id ) {\n            State = History.getStateById(id);\n        }\n\n        // Fetch SUID returned no State\n        if ( !State ) {\n            // Fetch URL\n            url = History.getFullUrl(url_or_hash);\n\n            // Check URL\n            id = History.getIdByUrl(url)||false;\n            if ( id ) {\n                State = History.getStateById(id);\n            }\n\n            // Create State\n            if ( !State && create && !History.isTraditionalAnchor(url_or_hash) ) {\n                State = History.createStateObject(null,null,url);\n            }\n        }\n\n        // Return\n        return State;\n    };\n\n    /**\n     * History.getIdByUrl()\n     * Get a State ID by a State URL\n     */\n    History.getIdByUrl = function(url){\n        // Fetch\n        var id = History.urlToId[url] || History.store.urlToId[url] || undefined;\n\n        // Return\n        return id;\n    };\n\n    /**\n     * History.getLastSavedState()\n     * Get an object containing the data, title and url of the current state\n     * @return {Object} State\n     */\n    History.getLastSavedState = function(){\n        return History.savedStates[History.savedStates.length-1]||undefined;\n    };\n\n    /**\n     * History.getLastStoredState()\n     * Get an object containing the data, title and url of the current state\n     * @return {Object} State\n     */\n    History.getLastStoredState = function(){\n        return History.storedStates[History.storedStates.length-1]||undefined;\n    };\n\n    /**\n     * History.hasUrlDuplicate\n     * Checks if a Url will have a url conflict\n     * @param {Object} newState\n     * @return {Boolean} hasDuplicate\n     */\n    History.hasUrlDuplicate = function(newState) {\n        // Prepare\n        var hasDuplicate = false,\n            oldState;\n\n        // Fetch\n        oldState = History.extractState(newState.url);\n\n        // Check\n        hasDuplicate = oldState && oldState.id !== newState.id;\n\n        // Return\n        return hasDuplicate;\n    };\n\n    /**\n     * History.storeState\n     * Store a State\n     * @param {Object} newState\n     * @return {Object} newState\n     */\n    History.storeState = function(newState){\n        // Store the State\n        History.urlToId[newState.url] = newState.id;\n\n        // Push the State\n        History.storedStates.push(History.cloneObject(newState));\n\n        // Return newState\n        return newState;\n    };\n\n    /**\n     * History.isLastSavedState(newState)\n     * Tests to see if the state is the last state\n     * @param {Object} newState\n     * @return {boolean} isLast\n     */\n    History.isLastSavedState = function(newState){\n        // Prepare\n        var isLast = false,\n            newId, oldState, oldId;\n\n        // Check\n        if ( History.savedStates.length ) {\n            newId = newState.id;\n            oldState = History.getLastSavedState();\n            oldId = oldState.id;\n\n            // Check\n            isLast = (newId === oldId);\n        }\n\n        // Return\n        return isLast;\n    };\n\n    /**\n     * History.saveState\n     * Push a State\n     * @param {Object} newState\n     * @return {boolean} changed\n     */\n    History.saveState = function(newState){\n        // Check Hash\n        if ( History.isLastSavedState(newState) ) {\n            return false;\n        }\n\n        // Push the State\n        History.savedStates.push(History.cloneObject(newState));\n\n        // Return true\n        return true;\n    };\n\n    /**\n     * History.getStateByIndex()\n     * Gets a state by the index\n     * @param {integer} index\n     * @return {Object}\n     */\n    History.getStateByIndex = function(index){\n        // Prepare\n        var State = null;\n\n        // Handle\n        if ( typeof index === 'undefined' ) {\n            // Get the last inserted\n            State = History.savedStates[History.savedStates.length-1];\n        }\n        else if ( index < 0 ) {\n            // Get from the end\n            State = History.savedStates[History.savedStates.length+index];\n        }\n        else {\n            // Get from the beginning\n            State = History.savedStates[index];\n        }\n\n        // Return State\n        return State;\n    };\n\n    /**\n     * History.getCurrentIndex()\n     * Gets the current index\n     * @return (integer)\n    */\n    History.getCurrentIndex = function(){\n        // Prepare\n        var index = null;\n\n        // No states saved\n        if(History.savedStates.length < 1) {\n            index = 0;\n        }\n        else {\n            index = History.savedStates.length-1;\n        }\n        return index;\n    };\n\n    // ====================================================================\n    // Hash Helpers\n\n    /**\n     * History.getHash()\n     * @param {Location=} location\n     * Gets the current document hash\n     * Note: unlike location.hash, this is guaranteed to return the escaped hash in all browsers\n     * @return {string}\n     */\n    History.getHash = function(doc){\n        var url = History.getLocationHref(doc),\n            hash;\n        hash = History.getHashByUrl(url);\n        return hash;\n    };\n\n    /**\n     * History.unescapeHash()\n     * normalize and Unescape a Hash\n     * @param {String} hash\n     * @return {string}\n     */\n    History.unescapeHash = function(hash){\n        // Prepare\n        var result = History.normalizeHash(hash);\n\n        // Unescape hash\n        result = decodeURIComponent(result);\n\n        // Return result\n        return result;\n    };\n\n    /**\n     * History.normalizeHash()\n     * normalize a hash across browsers\n     * @return {string}\n     */\n    History.normalizeHash = function(hash){\n        // Prepare\n        var result = hash.replace(/[^#]*#/,'').replace(/#.*/, '');\n\n        // Return result\n        return result;\n    };\n\n    /**\n     * History.setHash(hash)\n     * Sets the document hash\n     * @param {string} hash\n     * @return {History}\n     */\n    History.setHash = function(hash,queue){\n        // Prepare\n        var State, pageUrl;\n\n        // Handle Queueing\n        if ( queue !== false && History.busy() ) {\n            // Wait + Push to Queue\n            //History.debug('History.setHash: we must wait', arguments);\n            History.pushQueue({\n                scope: History,\n                callback: History.setHash,\n                args: arguments,\n                queue: queue\n            });\n            return false;\n        }\n\n        // Log\n        //History.debug('History.setHash: called',hash);\n\n        // Make Busy + Continue\n        History.busy(true);\n\n        // Check if hash is a state\n        State = History.extractState(hash,true);\n        if ( State && !History.emulated.pushState ) {\n            // Hash is a state so skip the setHash\n            //History.debug('History.setHash: Hash is a state so skipping the hash set with a direct pushState call',arguments);\n\n            // PushState\n            History.pushState(State.data,State.title,State.url,false);\n        }\n        else if ( History.getHash() !== hash ) {\n            // Hash is a proper hash, so apply it\n\n            // Handle browser bugs\n            if ( History.bugs.setHash ) {\n                // Fix Safari Bug https://bugs.webkit.org/show_bug.cgi?id=56249\n\n                // Fetch the base page\n                pageUrl = History.getPageUrl();\n\n                // Safari hash apply\n                History.pushState(null,null,pageUrl+'#'+hash,false);\n            }\n            else {\n                // Normal hash apply\n                document.location.hash = hash;\n            }\n        }\n\n        // Chain\n        return History;\n    };\n\n    /**\n     * History.escape()\n     * normalize and Escape a Hash\n     * @return {string}\n     */\n    History.escapeHash = function(hash){\n        // Prepare\n        var result = History.normalizeHash(hash);\n\n        // Escape hash\n        result = window.encodeURIComponent(result);\n\n        // IE6 Escape Bug\n        if ( !History.bugs.hashEscape ) {\n            // Restore common parts\n            result = result\n                .replace(/\\%21/g,'!')\n                .replace(/\\%26/g,'&')\n                .replace(/\\%3D/g,'=')\n                .replace(/\\%3F/g,'?');\n        }\n\n        // Return result\n        return result;\n    };\n\n    /**\n     * History.getHashByUrl(url)\n     * Extracts the Hash from a URL\n     * @param {string} url\n     * @return {string} url\n     */\n    History.getHashByUrl = function(url){\n        // Extract the hash\n        var hash = String(url)\n            .replace(/([^#]*)#?([^#]*)#?(.*)/, '$2')\n            ;\n\n        // Unescape hash\n        hash = History.unescapeHash(hash);\n\n        // Return hash\n        return hash;\n    };\n\n    /**\n     * History.setTitle(title)\n     * Applies the title to the document\n     * @param {State} newState\n     * @return {Boolean}\n     */\n    History.setTitle = function(newState){\n        // Prepare\n        var title = newState.title,\n            firstState;\n\n        // Initial\n        if ( !title ) {\n            firstState = History.getStateByIndex(0);\n            if ( firstState && firstState.url === newState.url ) {\n                title = firstState.title||History.options.initialTitle;\n            }\n        }\n\n        // Apply\n        try {\n            document.getElementsByTagName('title')[0].innerHTML = title.replace('<','&lt;').replace('>','&gt;').replace(' & ',' &amp; ');\n        }\n        catch ( Exception ) { }\n        document.title = title;\n\n        // Chain\n        return History;\n    };\n\n\n    // ====================================================================\n    // Queueing\n\n    /**\n     * History.queues\n     * The list of queues to use\n     * First In, First Out\n     */\n    History.queues = [];\n\n    /**\n     * History.busy(value)\n     * @param {boolean} value [optional]\n     * @return {boolean} busy\n     */\n    History.busy = function(value){\n        // Apply\n        if ( typeof value !== 'undefined' ) {\n            //History.debug('History.busy: changing ['+(History.busy.flag||false)+'] to ['+(value||false)+']', History.queues.length);\n            History.busy.flag = value;\n        }\n        // Default\n        else if ( typeof History.busy.flag === 'undefined' ) {\n            History.busy.flag = false;\n        }\n\n        // Queue\n        if ( !History.busy.flag ) {\n            // Execute the next item in the queue\n            clearTimeout(History.busy.timeout);\n            var fireNext = function(){\n                var i, queue, item;\n                if ( History.busy.flag ) return;\n                for ( i=History.queues.length-1; i >= 0; --i ) {\n                    queue = History.queues[i];\n                    if ( queue.length === 0 ) continue;\n                    item = queue.shift();\n                    History.fireQueueItem(item);\n                    History.busy.timeout = setTimeout(fireNext,History.options.busyDelay);\n                }\n            };\n            History.busy.timeout = setTimeout(fireNext,History.options.busyDelay);\n        }\n\n        // Return\n        return History.busy.flag;\n    };\n\n    /**\n     * History.busy.flag\n     */\n    History.busy.flag = false;\n\n    /**\n     * History.fireQueueItem(item)\n     * Fire a Queue Item\n     * @param {Object} item\n     * @return {Mixed} result\n     */\n    History.fireQueueItem = function(item){\n        return item.callback.apply(item.scope||History,item.args||[]);\n    };\n\n    /**\n     * History.pushQueue(callback,args)\n     * Add an item to the queue\n     * @param {Object} item [scope,callback,args,queue]\n     */\n    History.pushQueue = function(item){\n        // Prepare the queue\n        History.queues[item.queue||0] = History.queues[item.queue||0]||[];\n\n        // Add to the queue\n        History.queues[item.queue||0].push(item);\n\n        // Chain\n        return History;\n    };\n\n    /**\n     * History.queue (item,queue), (func,queue), (func), (item)\n     * Either firs the item now if not busy, or adds it to the queue\n     */\n    History.queue = function(item,queue){\n        // Prepare\n        if ( typeof item === 'function' ) {\n            item = {\n                callback: item\n            };\n        }\n        if ( typeof queue !== 'undefined' ) {\n            item.queue = queue;\n        }\n\n        // Handle\n        if ( History.busy() ) {\n            History.pushQueue(item);\n        } else {\n            History.fireQueueItem(item);\n        }\n\n        // Chain\n        return History;\n    };\n\n    /**\n     * History.clearQueue()\n     * Clears the Queue\n     */\n    History.clearQueue = function(){\n        History.busy.flag = false;\n        History.queues = [];\n        return History;\n    };\n\n\n    // ====================================================================\n    // IE Bug Fix\n\n    /**\n     * History.stateChanged\n     * States whether or not the state has changed since the last double check was initialised\n     */\n    History.stateChanged = false;\n\n    /**\n     * History.doubleChecker\n     * Contains the timeout used for the double checks\n     */\n    History.doubleChecker = false;\n\n    /**\n     * History.doubleCheckComplete()\n     * Complete a double check\n     * @return {History}\n     */\n    History.doubleCheckComplete = function(){\n        // Update\n        History.stateChanged = true;\n\n        // Clear\n        History.doubleCheckClear();\n\n        // Chain\n        return History;\n    };\n\n    /**\n     * History.doubleCheckClear()\n     * Clear a double check\n     * @return {History}\n     */\n    History.doubleCheckClear = function(){\n        // Clear\n        if ( History.doubleChecker ) {\n            clearTimeout(History.doubleChecker);\n            History.doubleChecker = false;\n        }\n\n        // Chain\n        return History;\n    };\n\n    /**\n     * History.doubleCheck()\n     * Create a double check\n     * @return {History}\n     */\n    History.doubleCheck = function(tryAgain){\n        // Reset\n        History.stateChanged = false;\n        History.doubleCheckClear();\n\n        // Fix IE6,IE7 bug where calling history.back or history.forward does not actually change the hash (whereas doing it manually does)\n        // Fix Safari 5 bug where sometimes the state does not change: https://bugs.webkit.org/show_bug.cgi?id=42940\n        if ( History.bugs.ieDoubleCheck ) {\n            // Apply Check\n            History.doubleChecker = setTimeout(\n                function(){\n                    History.doubleCheckClear();\n                    if ( !History.stateChanged ) {\n                        //History.debug('History.doubleCheck: State has not yet changed, trying again', arguments);\n                        // Re-Attempt\n                        tryAgain();\n                    }\n                    return true;\n                },\n                History.options.doubleCheckInterval\n            );\n        }\n\n        // Chain\n        return History;\n    };\n\n\n    // ====================================================================\n    // Safari Bug Fix\n\n    /**\n     * History.safariStatePoll()\n     * Poll the current state\n     * @return {History}\n     */\n    History.safariStatePoll = function(){\n        // Poll the URL\n\n        // Get the Last State which has the new URL\n        var\n            urlState = History.extractState(History.getLocationHref()),\n            newState;\n\n        // Check for a difference\n        if ( !History.isLastSavedState(urlState) ) {\n            newState = urlState;\n        }\n        else {\n            return;\n        }\n\n        // Check if we have a state with that url\n        // If not create it\n        if ( !newState ) {\n            //History.debug('History.safariStatePoll: new');\n            newState = History.createStateObject();\n        }\n\n        // Apply the New State\n        //History.debug('History.safariStatePoll: trigger');\n        History.Adapter.trigger(window,'popstate');\n\n        // Chain\n        return History;\n    };\n\n\n    // ====================================================================\n    // State Aliases\n\n    /**\n     * History.back(queue)\n     * Send the browser history back one item\n     * @param {Integer} queue [optional]\n     */\n    History.back = function(queue){\n        //History.debug('History.back: called', arguments);\n\n        // Handle Queueing\n        if ( queue !== false && History.busy() ) {\n            // Wait + Push to Queue\n            //History.debug('History.back: we must wait', arguments);\n            History.pushQueue({\n                scope: History,\n                callback: History.back,\n                args: arguments,\n                queue: queue\n            });\n            return false;\n        }\n\n        // Make Busy + Continue\n        History.busy(true);\n\n        // Fix certain browser bugs that prevent the state from changing\n        History.doubleCheck(function(){\n            History.back(false);\n        });\n\n        // Go back\n        history.go(-1);\n\n        // End back closure\n        return true;\n    };\n\n    /**\n     * History.forward(queue)\n     * Send the browser history forward one item\n     * @param {Integer} queue [optional]\n     */\n    History.forward = function(queue){\n        //History.debug('History.forward: called', arguments);\n\n        // Handle Queueing\n        if ( queue !== false && History.busy() ) {\n            // Wait + Push to Queue\n            //History.debug('History.forward: we must wait', arguments);\n            History.pushQueue({\n                scope: History,\n                callback: History.forward,\n                args: arguments,\n                queue: queue\n            });\n            return false;\n        }\n\n        // Make Busy + Continue\n        History.busy(true);\n\n        // Fix certain browser bugs that prevent the state from changing\n        History.doubleCheck(function(){\n            History.forward(false);\n        });\n\n        // Go forward\n        history.go(1);\n\n        // End forward closure\n        return true;\n    };\n\n    /**\n     * History.go(index,queue)\n     * Send the browser history back or forward index times\n     * @param {Integer} queue [optional]\n     */\n    History.go = function(index,queue){\n        //History.debug('History.go: called', arguments);\n\n        // Prepare\n        var i;\n\n        // Handle\n        if ( index > 0 ) {\n            // Forward\n            for ( i=1; i<=index; ++i ) {\n                History.forward(queue);\n            }\n        }\n        else if ( index < 0 ) {\n            // Backward\n            for ( i=-1; i>=index; --i ) {\n                History.back(queue);\n            }\n        }\n        else {\n            throw new Error('History.go: History.go requires a positive or negative integer passed.');\n        }\n\n        // Chain\n        return History;\n    };\n\n\n    // ====================================================================\n    // HTML5 State Support\n\n    // Non-Native pushState Implementation\n    if ( History.emulated.pushState ) {\n        /*\n         * Provide Skeleton for HTML4 Browsers\n         */\n\n        // Prepare\n        var emptyFunction = function(){};\n        History.pushState = History.pushState||emptyFunction;\n        History.replaceState = History.replaceState||emptyFunction;\n    } // History.emulated.pushState\n\n    // Native pushState Implementation\n    else {\n        /*\n         * Use native HTML5 History API Implementation\n         */\n\n        /**\n         * History.onPopState(event,extra)\n         * Refresh the Current State\n         */\n        History.onPopState = function(event,extra){\n            // Prepare\n            var stateId = false, newState = false, currentHash, currentState;\n\n            // Reset the double check\n            History.doubleCheckComplete();\n\n            // Check for a Hash, and handle apporiatly\n            currentHash = History.getHash();\n            if ( currentHash ) {\n                // Expand Hash\n                currentState = History.extractState(currentHash||History.getLocationHref(),true);\n                if ( currentState ) {\n                    // We were able to parse it, it must be a State!\n                    // Let's forward to replaceState\n                    //History.debug('History.onPopState: state anchor', currentHash, currentState);\n                    History.replaceState(currentState.data, currentState.title, currentState.url, false);\n                }\n                else {\n                    // Traditional Anchor\n                    //History.debug('History.onPopState: traditional anchor', currentHash);\n                    History.Adapter.trigger(window,'anchorchange');\n                    History.busy(false);\n                }\n\n                // We don't care for hashes\n                History.expectedStateId = false;\n                return false;\n            }\n\n            // Ensure\n            stateId = History.Adapter.extractEventData('state',event,extra) || false;\n\n            // Fetch State\n            if ( stateId ) {\n                // Vanilla: Back/forward button was used\n                newState = History.getStateById(stateId);\n            }\n            else if ( History.expectedStateId ) {\n                // Vanilla: A new state was pushed, and popstate was called manually\n                newState = History.getStateById(History.expectedStateId);\n            }\n            else {\n                // Initial State\n                newState = History.extractState(History.getLocationHref());\n            }\n\n            // The State did not exist in our store\n            if ( !newState ) {\n                // Regenerate the State\n                newState = History.createStateObject(null,null,History.getLocationHref());\n            }\n\n            // Clean\n            History.expectedStateId = false;\n\n            // Check if we are the same state\n            if ( History.isLastSavedState(newState) ) {\n                // There has been no change (just the page's hash has finally propagated)\n                //History.debug('History.onPopState: no change', newState, History.savedStates);\n                History.busy(false);\n                return false;\n            }\n\n            // Store the State\n            History.storeState(newState);\n            History.saveState(newState);\n\n            // Force update of the title\n            History.setTitle(newState);\n\n            // Fire Our Event\n            History.Adapter.trigger(window,'statechange');\n            History.busy(false);\n\n            // Return true\n            return true;\n        };\n        History.Adapter.bind(window,'popstate',History.onPopState);\n\n        /**\n         * History.pushState(data,title,url)\n         * Add a new State to the history object, become it, and trigger onpopstate\n         * We have to trigger for HTML4 compatibility\n         * @param {object} data\n         * @param {string} title\n         * @param {string} url\n         * @return {true}\n         */\n        History.pushState = function(data,title,url,queue){\n            //History.debug('History.pushState: called', arguments);\n\n            // Check the State\n            if ( History.getHashByUrl(url) && History.emulated.pushState ) {\n                throw new Error('History.js does not support states with fragement-identifiers (hashes/anchors).');\n            }\n\n            // Handle Queueing\n            if ( queue !== false && History.busy() ) {\n                // Wait + Push to Queue\n                //History.debug('History.pushState: we must wait', arguments);\n                History.pushQueue({\n                    scope: History,\n                    callback: History.pushState,\n                    args: arguments,\n                    queue: queue\n                });\n                return false;\n            }\n\n            // Make Busy + Continue\n            History.busy(true);\n\n            // Create the newState\n            var newState = History.createStateObject(data,title,url);\n\n            // Check it\n            if ( History.isLastSavedState(newState) ) {\n                // Won't be a change\n                History.busy(false);\n            }\n            else {\n                // Store the newState\n                History.storeState(newState);\n                History.expectedStateId = newState.id;\n\n                // Push the newState\n                history.pushState(newState.id,newState.title,newState.url);\n\n                // Fire HTML5 Event\n                History.Adapter.trigger(window,'popstate');\n            }\n\n            // End pushState closure\n            return true;\n        };\n\n        /**\n         * History.replaceState(data,title,url)\n         * Replace the State and trigger onpopstate\n         * We have to trigger for HTML4 compatibility\n         * @param {object} data\n         * @param {string} title\n         * @param {string} url\n         * @return {true}\n         */\n        History.replaceState = function(data,title,url,queue){\n            //History.debug('History.replaceState: called', arguments);\n\n            // Check the State\n            if ( History.getHashByUrl(url) && History.emulated.pushState ) {\n                throw new Error('History.js does not support states with fragement-identifiers (hashes/anchors).');\n            }\n\n            // Handle Queueing\n            if ( queue !== false && History.busy() ) {\n                // Wait + Push to Queue\n                //History.debug('History.replaceState: we must wait', arguments);\n                History.pushQueue({\n                    scope: History,\n                    callback: History.replaceState,\n                    args: arguments,\n                    queue: queue\n                });\n                return false;\n            }\n\n            // Make Busy + Continue\n            History.busy(true);\n\n            // Create the newState\n            var newState = History.createStateObject(data,title,url);\n\n            // Check it\n            if ( History.isLastSavedState(newState) ) {\n                // Won't be a change\n                History.busy(false);\n            }\n            else {\n                // Store the newState\n                History.storeState(newState);\n                History.expectedStateId = newState.id;\n\n                // Push the newState\n                history.replaceState(newState.id,newState.title,newState.url);\n\n                // Fire HTML5 Event\n                History.Adapter.trigger(window,'popstate');\n            }\n\n            // End replaceState closure\n            return true;\n        };\n\n    } // !History.emulated.pushState\n\n\n    // ====================================================================\n    // Initialise\n\n    /**\n     * Load the Store\n     */\n    if ( sessionStorage ) {\n        // Fetch\n        try {\n            History.store = JSON.parse(sessionStorage.getItem('History.store'))||{};\n        }\n        catch ( err ) {\n            History.store = {};\n        }\n\n        // Normalize\n        History.normalizeStore();\n    }\n    else {\n        // Default Load\n        History.store = {};\n        History.normalizeStore();\n    }\n\n    /**\n     * Clear Intervals on exit to prevent memory leaks\n     */\n    History.Adapter.bind(window,\"unload\",History.clearAllIntervals);\n\n    /**\n     * Create the initial State\n     */\n    History.saveState(History.storeState(History.extractState(History.getLocationHref(),true)));\n\n    /**\n     * Bind for Saving Store\n     */\n    if ( sessionStorage ) {\n        // When the page is closed\n        History.onUnload = function(){\n            // Prepare\n            var currentStore, item, currentStoreString;\n\n            // Fetch\n            try {\n                currentStore = JSON.parse(sessionStorage.getItem('History.store'))||{};\n            }\n            catch ( err ) {\n                currentStore = {};\n            }\n\n            // Ensure\n            currentStore.idToState = currentStore.idToState || {};\n            currentStore.urlToId = currentStore.urlToId || {};\n            currentStore.stateToId = currentStore.stateToId || {};\n\n            // Sync\n            for ( item in History.idToState ) {\n                if ( !History.idToState.hasOwnProperty(item) ) {\n                    continue;\n                }\n                currentStore.idToState[item] = History.idToState[item];\n            }\n            for ( item in History.urlToId ) {\n                if ( !History.urlToId.hasOwnProperty(item) ) {\n                    continue;\n                }\n                currentStore.urlToId[item] = History.urlToId[item];\n            }\n            for ( item in History.stateToId ) {\n                if ( !History.stateToId.hasOwnProperty(item) ) {\n                    continue;\n                }\n                currentStore.stateToId[item] = History.stateToId[item];\n            }\n\n            // Update\n            History.store = currentStore;\n            History.normalizeStore();\n\n            // In Safari, going into Private Browsing mode causes the\n            // Session Storage object to still exist but if you try and use\n            // or set any property/function of it it throws the exception\n            // \"QUOTA_EXCEEDED_ERR: DOM Exception 22: An attempt was made to\n            // add something to storage that exceeded the quota.\" infinitely\n            // every second.\n            currentStoreString = JSON.stringify(currentStore);\n            try {\n                // Store\n                sessionStorage.setItem('History.store', currentStoreString);\n            }\n            catch (e) {\n                if (e.code === DOMException.QUOTA_EXCEEDED_ERR) {\n                    if (sessionStorage.length) {\n                        // Workaround for a bug seen on iPads. Sometimes the quota exceeded error comes up and simply\n                        // removing/resetting the storage can work.\n                        sessionStorage.removeItem('History.store');\n                        sessionStorage.setItem('History.store', currentStoreString);\n                    } else {\n                        // Otherwise, we're probably private browsing in Safari, so we'll ignore the exception.\n                    }\n                } else {\n                    throw e;\n                }\n            }\n        };\n\n        // For Internet Explorer\n        History.intervalList.push(setInterval(History.onUnload,History.options.storeInterval));\n\n        // For Other Browsers\n        History.Adapter.bind(window,'beforeunload',History.onUnload);\n        History.Adapter.bind(window,'unload',History.onUnload);\n\n        // Both are enabled for consistency\n    }\n\n    // Non-Native pushState Implementation\n    if ( !History.emulated.pushState ) {\n        // Be aware, the following is only for native pushState implementations\n        // If you are wanting to include something for all browsers\n        // Then include it above this if block\n\n        /**\n         * Setup Safari Fix\n         */\n        if ( History.bugs.safariPoll ) {\n            History.intervalList.push(setInterval(History.safariStatePoll, History.options.safariPollInterval));\n        }\n\n        /**\n         * Ensure Cross Browser Compatibility\n         */\n        if ( navigator.vendor === 'Apple Computer, Inc.' || (navigator.appCodeName||'') === 'Mozilla' ) {\n            /**\n             * Fix Safari HashChange Issue\n             */\n\n            // Setup Alias\n            History.Adapter.bind(window,'hashchange',function(){\n                History.Adapter.trigger(window,'popstate');\n            });\n\n            // Initialise Alias\n            if ( History.getHash() ) {\n                History.Adapter.onDomLoad(function(){\n                    History.Adapter.trigger(window,'hashchange');\n                });\n            }\n        }\n\n    } // !History.emulated.pushState\n\n\n}; // History.initCore\n\n// Try to Initialise History\nif (!History.options || !History.options.delayInit) {\n    History.init();\n}\n"]},"metadata":{},"sourceType":"script"}